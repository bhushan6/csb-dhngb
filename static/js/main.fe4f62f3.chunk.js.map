{"version":3,"sources":["Components/StateStore/store.js","Components/HtmlOverlay/HtmlOverlay.js","Components/Player/Firstpersonprespective.js","Components/Lights/Lights.js","Assets/Stalls/type1-centerDraco.glb","Components/Hall/Stalls/Type1_center.js","Assets/Stalls/type1-cornerDraco.glb","Components/Hall/Stalls/Type1_corner.js","Assets/Stalls/type2-centerDraco.glb","Components/Hall/Stalls/Type2_center.js","Assets/Stalls/type2-cornerDraco.glb","Components/Hall/Stalls/Type2_corner.js","Assets/Stalls/type3-centerDraco.glb","Assets/Stalls/ReceptionTable/ReceptionDraco.glb","Components/Hall/Stalls/ReceptionTable/ReceptionDraco.js","Components/Hall/Stalls/Type3_center.js","Assets/Stalls/type3-cornerDraco.glb","Components/Hall/Stalls/Type3_corner.js","Assets/Walls/LeftWall/LeftWall.glb","Assets/Walls/LeftWall/LightMap.jpg","Assets/Walls/LeftWall/Side_Walls_AO.jpg","Assets/Walls/LeftWall/Side_Walls_emisionmaop.jpg","Components/Hall/Walls/LeftWall.js","Assets/Walls/Rightwall/RightWallDraco.glb","Components/Hall/Walls/RightWall.js","Assets/Walls/FrontWall/FrontWall.glb","Components/Hall/Walls/FrontWall.js","Assets/Ground/Grey Noise.jpg","Assets/Ground/Grey Noise Normal.jpg","Components/Hall/Floor/Ground.js","Assets/Stalls/ReceptionTable/Reception2.glb","Components/Hall/Stalls/ReceptionTable/Reception2.js","Assets/Stalls/Broucher/Broucher.glb","Components/Hall/Stalls/Broucher/Broucher.js","Assets/Stalls/VCTable/VCTable.glb","Components/Hall/Stalls/VCTable/VCTable.js","Assets/Stalls/KTv/KTv.glb","Components/Hall/Stalls/KTv/KTv.js","Assets/Stalls/Display/Display.glb","Components/Hall/Stalls/Display/Display.js","Components/Hall/Stalls/Logo/BannerInstance.js","Assets/Stalls/Standee/Standee.glb","Components/Hall/Stalls/Standee/Standee.js","Components/Hall/Walls/SideBoundary.js","Components/Hall/Stalls/StallPlacement.js","App.js","index.js"],"names":["useStore","create","set","playerTeleport","position","undefined","teleportState","teleportTo","newPosition","state","touchController","movementState","forward","backward","left","right","movement","key","buttonsActive","breakMovement","setTimeout","HtmlOverlay","controllerState","pressed","e","target","id","leave","onPointerDown","onPointerUp","className","keys","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","moveFieldByKey","direction","THREE","frontVector","sideVector","euler","maxPolarAngle","Math","PI","_PI_2","Firstpersonprespective","props","useSphere","mass","type","ref","api","teleportation","useState","setMovement","camera","useThree","handleMouseMove","buttons","movementX","mozMovementX","webkitMovementX","movementY","mozMovementY","webkitMovementY","setFromQuaternion","quaternion","y","x","max","min","setFromEuler","useEffect","handleKeyDown","m","code","handleKeyUp","document","addEventListener","removeEventListener","usePlayerControls","rotation","velocity","useRef","subscribe","v","current","useFrame","p","lerp","z","teleport","Number","subVectors","normalize","multiplyScalar","applyEuler","Lights","intensity","color","groundColor","Model","positionData","group","ref1","ref2","ref3","ref4","ref5","ref6","ref7","ref8","ref9","ref10","ref11","ref12","refArr","useGLTF","model","nodes","materials","dummy","React","useMemo","threeColor","useLayoutEffect","map","b","index","sign","updateMatrix","r","setMatrixAt","matrix","setUniformAt","instanceMatrix","needsUpdate","scale","dispose","args","Mesh004","geometry","length","material","Mesh004_1","Base_AO2","Mesh005","ciling_light1","Mesh005_1","ciling_light_emision1","Mesh006","hanging_light_mat","Mesh006_1","hanging_Emissive_ligts","Mesh007","Mesh007_1","Mesh007_2","White_color","Mesh007_3","White_color_2","Mesh007_4","Mesh007_5","extend","InstancedUniformsMesh","preload","ref13","Mesh003","light_metal","Mesh003_1","Lights_emisson","Mesh002","hanging_light_matt","Mesh002_1","hanging_light_emission","Mesh001","Metal","Mesh001_1","Theme_color","Mesh001_2","white_color","Mesh001_3","Gry_color","Mesh001_4","white_color_glow","Mesh001_5","Theme_color_glow","Mesh001_6","floor","Mesh010","Mesh010_1","AO","Mesh009","ligts_Matt","Mesh009_1","Light_Emision","Mesh008","white_color_2","Mesh008_1","Mesh008_2","Base_Matt","Mesh008_3","Mesh008_4","Mesh008_5","Roof","Mesh008_6","Gray_Matt","Mesh008_7","glow","Mesh008_8","Stand_Metal","Mesh016","Mesh016_1","Theme_color_glow_AO","Mesh015","light_metal_matt","Mesh015_1","Mesh014","Mesh014_1","Mesh014_2","Floor","Mesh014_3","Mesh014_4","Mesh019","Mesh019_1","color_AO","Mesh018","ceiling_lights_matt","Mesh018_1","ceiling_lights_emision","Mesh017","Mesh017_1","hanging_light_emision","Mesh020","Mesh020_1","Mesh020_2","Black_matt","Mesh020_3","Mesh020_4","Mesh020_5","Mesh020_6","LED","Mesh021","Base_AO_2","Mesh021_1","Mesh022","Mesh022_1","emision_matt","Mesh023","Mesh023_1","Emision_matt2","Mesh024","Gry_standee","Mesh024_1","Theem_color","Mesh024_2","Mesh024_3","gry","Mesh024_4","Mesh024_5","white_color_glow1","size","leftWall","useTexture","light","ao","emission","lightMap","aoMap","emissionMap","flipY","encoding","emissiveMap","emissiveIntensity","m3","aoMapIntensity","m2","arraySize","round","Array","fill","a","i","front_Wall","Wall2","Ground","usePlane","texture","useLoader","groundTex","normTex","groundNorm","wrapS","wrapT","repeat","receiveShadow","side","normalMap","SideBoundary","visible","zDist","stallSizes","null","add","arr","reduce","typeInsatnce","pos1","pos2","pos3","pos4","pos5","pos6","color1","color2","color3","color4","color5","color6","logo1","logo2","logo3","logo4","logo5","logo6","banner1","banner2","banner3","banner4","banner5","banner6","stallIndex1","stallIndex2","stallIndex3","stallIndex4","stallIndex5","stallIndex6","j","stallType","stallColor","stallLogo","stallBanners","StallPlacement","stallData","types","loaded","setLoaded","setPositionData","floorSize","setFloorSize","stall","push","stall_type","primary_3dcolor","logo_url","banner_images","Object","stallName","array","value","n","instancing","total","forEach","grid","t","center","splice","pos","logo","banner","App","setStallData","setTypes","getStallData","fetch","response","json","data","rows","coloumn","shadows","gl","alpha","antialias","fov","near","far","onCreated","physicallyCorrectLights","outputEncoding","dpr","window","devicePixelRatio","gravity","fallback","OrbitControls","Stats","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.fe4f62f3.chunk.js","sourcesContent":["import create from \"zustand\";\r\n\r\nconst useStore = create(set => ({\r\n    playerTeleport : {\r\n        position : undefined,\r\n        teleportState : false,\r\n        teleportTo : (newPosition) => set(state => (state.playerTeleport.position = newPosition))\r\n    },\r\n\r\n    touchController : {\r\n        movementState : {\r\n            forward : false,\r\n            backward : false,\r\n            left : false,\r\n            right : false\r\n        },\r\n        movement : (key) => set(state => {\r\n            state.touchController.movementState[key] = true\r\n            state.touchController.buttonsActive = true\r\n        }),\r\n        breakMovement : (key) => set(state => {\r\n            state.touchController.movementState[key] = false\r\n            setTimeout(() => {state.touchController.buttonsActive = false}, 200)\r\n        }),\r\n        buttonsActive : false\r\n    }\r\n  }))\r\n\r\n\r\n  export default useStore","import React from 'react'\r\nimport { FaArrowAltCircleUp, FaArrowAltCircleLeft, FaArrowAltCircleDown, FaArrowAltCircleRight} from 'react-icons/fa';\r\nimport useStore from \"../StateStore/store.js\"\r\n\r\nconst HtmlOverlay = () => {\r\n\r\n    // const [upPressed, setIsPressed] = React.useState(false)\r\n\r\n    const controllerState = useStore(state => state.touchController)\r\n\r\n    const pressed = (e) => {\r\n        // setIsPressed(true)\r\n        if(e.target.id !== \"\"){\r\n            controllerState.movement(e.target.id)\r\n        }\r\n    }\r\n\r\n    const leave = e => {\r\n        // setIsPressed(false)\r\n        if(e.target.id !== \"\"){\r\n            controllerState.breakMovement(e.target.id)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"html-overlay\">\r\n            <div id=\"controls\">\r\n\r\n                <div\r\n                    onPointerDown = {e => pressed(e)}\r\n                    onPointerUp = {e => leave(e)}\r\n                    id = \"left\"\r\n                    className = \"btn\"\r\n                >\r\n                     <FaArrowAltCircleLeft className = \"icon\"/>\r\n                </div>\r\n                <div className=\"center\">\r\n                    <div\r\n                        onPointerDown = {e => pressed(e)}\r\n                        onPointerUp = {e => leave(e)}\r\n                        id = \"forward\"\r\n                        className = \"btn\"\r\n                    >\r\n                        <FaArrowAltCircleUp className = \"icon\"/>\r\n                    </div>\r\n                    <div\r\n                        onPointerDown = {e => pressed(e)}\r\n                        onPointerUp = {e => leave(e)}\r\n                        id = \"backward\"\r\n                        className = \"btn\"\r\n                    >\r\n                        <FaArrowAltCircleDown className = \"icon\"/>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    onPointerDown = {e => pressed(e)}\r\n                    onPointerUp = {e => leave(e)}\r\n                    id = \"right\"\r\n                    className = \"btn\"\r\n                >\r\n                     <FaArrowAltCircleRight className = \"icon\"/>\r\n                </div>\r\n            </div>\r\n            <p id = \"instruction\">To move around</p>\r\n        </div>\r\n         \r\n        \r\n    )\r\n}\r\n\r\nexport default HtmlOverlay\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\nimport * as THREE from \"three\"\r\nimport {useSphere } from \"@react-three/cannon\"\r\nimport { useThree, useFrame } from \"@react-three/fiber\"\r\nimport useStore from \"../StateStore/store\"\r\n\r\nconst SPEED = 50;\r\nconst keys = { ArrowUp: \"forward\", ArrowDown: \"backward\", ArrowLeft: \"left\", ArrowRight: \"right\"}\r\nconst moveFieldByKey = (key) => keys[key]\r\nconst direction = new THREE.Vector3()\r\nconst frontVector = new THREE.Vector3()\r\nconst sideVector = new THREE.Vector3()\r\nconst euler = new THREE.Euler(0, 0, 0, \"YXZ\")\r\nconst minPolarAngle = 0;\r\nconst maxPolarAngle = Math.PI;\r\nconst _PI_2 = Math.PI/2;\r\n\r\n\r\n\r\nconst usePlayerControls = () => {\r\n  const [movement, setMovement] = useState({ forward: false, backward: false, left: false, right: false})\r\n\r\n  const {camera} = useThree()\r\n  \r\n  const handleMouseMove = (e) => {\r\n    if(e.buttons === 1){\r\n      const movementX = e.movementX || e.mozMovementX || e.webkitMovementX || 0;\r\n      const movementY = e.movementY || e.mozMovementY || e.webkitMovementY || 0;\r\n\r\n      euler.setFromQuaternion( camera.quaternion );\r\n\r\n\t\t\teuler.y -= movementX * 0.002;\r\n\t\t\teuler.x -= movementY * 0.002;\r\n\r\n\t\t\teuler.x = Math.max( _PI_2 - maxPolarAngle, Math.min( _PI_2 - minPolarAngle, euler.x ) );\r\n\r\n\t\t\tcamera.quaternion.setFromEuler( euler );\r\n    }\r\n  }\r\n \r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {setMovement((m) => ({ ...m, [moveFieldByKey(e.code)]: true }))}\r\n    const handleKeyUp = (e) => setMovement((m) => ({ ...m, [moveFieldByKey(e.code)]: false }))\r\n    document.addEventListener(\"keydown\", handleKeyDown)\r\n    document.addEventListener(\"keyup\", handleKeyUp)\r\n    document.addEventListener(\"pointermove\", handleMouseMove)\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleKeyDown)\r\n      document.removeEventListener(\"keyup\", handleKeyUp)\r\n      document.removeEventListener(\"pointermove\", handleMouseMove)\r\n    }\r\n  }, [])\r\n  return movement\r\n}\r\n\r\nconst Firstpersonprespective = (props) => {\r\n  const [ref, api] = useSphere(() => ({ mass: 1, type: \"Dynamic\", position : [0, 5, 0],...props }))\r\n  \r\n  const teleportation = useStore(state => state.playerTeleport)\r\n  let controllerState = useStore(state => state.touchController)\r\n\r\n    const teleport = () => {\r\n      if(teleportation.position){\r\n        let p = ref.current.position.lerp(teleportation.position, 0.1)\r\n        api.position.set(p.x, p.y, p.z)\r\n      }\r\n    }\r\n\r\n    let {forward, backward, left, right} = usePlayerControls()\r\n\r\n    const { camera } = useThree()\r\n \r\n    useEffect(() => {camera.rotation.set(0, 0, 0)}, [])\r\n\r\n    const velocity = useRef([0, 0, 0])\r\n\r\n    useEffect(() => void api.velocity.subscribe((v) => (velocity.current = v)), [])\r\n    useFrame(() => {\r\n        if(teleportation.teleportState === true){\r\n          teleport()\r\n        }\r\n\r\n        if(controllerState.buttonsActive === true){\r\n          forward = controllerState.movementState.forward\r\n          backward = controllerState.movementState.backward\r\n          left = controllerState.movementState.left\r\n          right = controllerState.movementState.right\r\n        }\r\n        \r\n        camera.position.set(ref.current.position.x, 5, ref.current.position.z)\r\n        frontVector.set(0, 0, Number(backward) - Number(forward))\r\n        sideVector.set(Number(left) - Number(right), 0, 0)\r\n        direction.subVectors(frontVector, sideVector).normalize().multiplyScalar(SPEED).applyEuler(camera.rotation)\r\n        api.velocity.set(direction.x, velocity.current[1], direction.z)\r\n    })\r\n\r\n    return <mesh ref={ref} />\r\n}\r\n\r\nexport default Firstpersonprespective\r\n","import React from 'react'\r\n\r\nconst Lights = () => {\r\n\r\n    \r\n    return (\r\n       <>\r\n        <ambientLight intensity = {2}/>\r\n        <hemisphereLight intensity={1} color = \"#ffffff\"  groundColor=\"#323231\" position= {[0, 50, 0]}/>\r\n        <directionalLight intensity= {6} position ={[15, 0, -15]}/>\r\n        <directionalLight intensity= {6} position ={[-15, 0, 15]}/>\r\n        <directionalLight intensity= {6} position ={[0, 15, 0]}/>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Lights\r\n","export default __webpack_public_path__ + \"static/media/type1-centerDraco.b6c7a8a8.glb\";","import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport * as THREE from \"three\"\nimport { extend } from '@react-three/fiber'\nimport { InstancedUniformsMesh } from 'three-instanced-uniforms-mesh'\nimport model from '../../../Assets/Stalls/type1-centerDraco.glb'\n\nextend({ InstancedUniformsMesh })\n\nexport default function Model({positionData, position, color}) {\n  const group = useRef()\n  const ref1 = useRef()\n  const ref2 = useRef()\n  const ref3 = useRef()\n  const ref4 = useRef()\n  const ref5 = useRef()\n  const ref6 = useRef()\n  const ref7 = useRef()\n  const ref8 = useRef()\n  const ref9 = useRef()\n  const ref10 = useRef()\n  const ref11 = useRef()\n  const ref12 = useRef()\n\n  // console.log(color)\n\n  const refArr = [ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, ref10, ref11, ref12]\n\n  const { nodes, materials } = useGLTF(model)\n\n  const dummy = React.useMemo(() => new THREE.Object3D(), [])\n  const threeColor = React.useMemo(() => new THREE.Color(), [])\n\n  React.useLayoutEffect(() => {\n\n    positionData.map((b, index) => {\n        dummy.position.set(b[0] *34 , b[2]*30, -0.15*30)\n        dummy.rotation.set(0, 0, Math.sign(-b[2])*Math.PI/2)\n        dummy.updateMatrix()         \n\n        refArr.map(r => {\n          r.current.setMatrixAt(index, dummy.matrix)\n        })\n\n\n        threeColor.set(color[index])\n        \n        ref12.current.setUniformAt('diffuse', index, threeColor)\n        ref7.current.setUniformAt('diffuse', index, threeColor)\n        \n    \n    })\n    refArr.map(r => {\n      r.current.instanceMatrix.needsUpdate = true\n    })\n}, [positionData])\n\n\n  return (\n    <group ref={group} scale={[3,3,3]} dispose={null} position={position}>\n      <group position={[0, 0, 0]} rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\n        <instancedMesh\n          ref={ref1}\n          args={[nodes.Mesh004.geometry, null, positionData.length ]} \n          material={materials['Base_AO1.001']} />\n        <instancedMesh \n          ref={ref2}\n          args = {[nodes.Mesh004_1.geometry , null, positionData.length]}\n          material={materials.Base_AO2} />\n        <group position={[0, 0, -0.28]}>\n          <instancedMesh \n            ref={ref3}\n            args = {[ nodes.Mesh005.geometry, null, positionData.length]}\n            material={materials.ciling_light1} />\n          <instancedMesh \n            ref={ref4}\n            args = {[ nodes.Mesh005_1.geometry, null, positionData.length]}\n            material={materials.ciling_light_emision1} />\n        </group>\n        <instancedMesh\n          ref={ref5}\n          args={[ nodes.Mesh006.geometry ,null, positionData.length]}\n          material={materials.hanging_light_mat} />\n        <instancedMesh\n          ref={ref6}\n          args={[ nodes.Mesh006_1.geometry,null, positionData.length]}\n          material={materials.hanging_Emissive_ligts} />\n        <instancedUniformsMesh \n          ref={ref7}\n          args={[nodes.Mesh007.geometry ,null, positionData.length]}\n          material={materials['Theme_color_glow.001']} />\n        <instancedMesh\n          ref={ref8}\n          args={[ nodes.Mesh007_1.geometry,null, positionData.length]}\n          material={materials['floor.001']} />\n        <instancedMesh\n          ref={ref9}\n          args={[nodes.Mesh007_2.geometry ,null, positionData.length]}\n          material={materials.White_color} />\n        <instancedMesh\n          ref={ref10}\n          args={[ nodes.Mesh007_3.geometry,null, positionData.length]}\n          material={materials.White_color_2} />\n        <instancedMesh\n          ref={ref11}\n          args={[nodes.Mesh007_4.geometry ,null, positionData.length]}\n          material={materials['Gry_color.001']} />\n        <instancedUniformsMesh \n          ref={ref12}\n          args={[ nodes.Mesh007_5.geometry,null, positionData.length]}\n          material={materials['Theme_color.001']} />\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/type1-cornerDraco.700b4537.glb\";","\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport * as THREE from \"three\"\nimport { extend } from '@react-three/fiber'\nimport { InstancedUniformsMesh } from 'three-instanced-uniforms-mesh'\nimport model from '../../../Assets/Stalls/type1-cornerDraco.glb'\n\nextend({ InstancedUniformsMesh })\n\n\nexport default function Model({positionData, color}) {\n  const group = useRef()\n  // const ref1 = useRef()\n  // const ref2 = useRef()\n  const ref3 = useRef()\n  const ref4 = useRef()\n  const ref5 = useRef()\n  const ref6 = useRef()\n  const ref7 = useRef()\n  const ref8 = useRef()\n  const ref9 = useRef()\n  const ref10 = useRef()\n  const ref11 = useRef()\n  const ref12 = useRef()\n  const ref13 = useRef()\n\n\n  const refArr = [ref3, ref4, ref5, ref6, ref7, ref8, ref9, ref10, ref11, ref12, ref13]\n\n  const { nodes, materials } = useGLTF(model)\n\n  const dummy = React.useMemo(() => new THREE.Object3D(), [])\n  const threeColor = React.useMemo(() => new THREE.Color(), [])\n\n  React.useLayoutEffect(() => {\n\n    positionData.map((b, index) => {\n        dummy.position.set(b[0] *34 , b[2]*30, -0.15*30)\n        const r = b[2] > 0 ? 1 :  0\n        dummy.rotation.set(0, 0, r*Math.PI)\n        dummy.updateMatrix()         \n\n        refArr.map(r => {\n          r.current.setMatrixAt(index, dummy.matrix)\n        })\n\n\n        threeColor.set(color[index])\n        \n        ref12.current.setUniformAt('diffuse', index, threeColor)\n        ref8.current.setUniformAt('diffuse', index, threeColor)\n        \n    \n    })\n    refArr.map(r => {\n      r.current.instanceMatrix.needsUpdate = true\n    })\n  }, [positionData])\n\n\n  return (\n    <group ref={group} scale={[3,3,3]} dispose={null}>\n      <group rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\n        {/* <group position={[154.13, -0.68, 0]} rotation={[0, 0, -Math.PI / 3]}>\n          <instancedMesh\n            // position={[154.13, -0.68, 0]}\n            // rotation={[0, -Math.PI/2, 0]}\n            ref={ref1}\n            args={[ nodes.Mesh.geometry, null, positionData.length]}\n            material={materials.Base_AO1} />\n          <instancedMesh\n            // position={[154.13, -0.68, 0]}\n            // rotation={[0, Math.PI/2, 0]}\n            ref={ref2}\n            args={[ nodes.Mesh_1.geometry, null, positionData.length]}\n            material={materials.BaseAO_2} />\n        </group> */}\n        <instancedMesh\n          ref={ref3}\n          args={[ nodes.Mesh003.geometry, null, positionData.length]}\n          material={materials.light_metal} />\n        <instancedMesh\n          ref={ref4}\n          args={[ nodes.Mesh003_1.geometry, null, positionData.length]}\n          material={materials.Lights_emisson} />\n        <instancedMesh\n          ref={ref5}\n          args={[ nodes.Mesh002.geometry, null, positionData.length]}\n          material={materials.hanging_light_matt} />\n        <instancedMesh\n          ref={ref6}\n          args={[ nodes.Mesh002_1.geometry, null, positionData.length]}\n          material={materials.hanging_light_emission} />\n        <instancedMesh\n          ref={ref7}\n          args={[ nodes.Mesh001.geometry, null, positionData.length]}\n          material={materials.Metal} />\n        <instancedUniformsMesh \n          ref={ref8}\n          args={[ nodes.Mesh001_1.geometry, null, positionData.length]}\n          material={materials.Theme_color} />\n        <instancedMesh\n          ref={ref9}\n          args={[ nodes.Mesh001_2.geometry, null, positionData.length]}\n          material={materials.white_color} />\n        <instancedMesh\n          ref={ref10}\n          args={[ nodes.Mesh001_3.geometry, null, positionData.length]}\n          material={materials.Gry_color} />\n        <instancedMesh\n          ref={ref11}\n          args={[ nodes.Mesh001_4.geometry, null, positionData.length]}\n          material={materials.white_color_glow} />\n        <instancedUniformsMesh \n          ref={ref12}\n          args={[ nodes.Mesh001_5.geometry, null, positionData.length]}\n          material={materials.Theme_color_glow} />\n        <instancedMesh\n          ref={ref13}\n          args={[ nodes.Mesh001_6.geometry, null, positionData.length]}\n          material={materials.floor} />\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/type2-centerDraco.aaaf0ff7.glb\";","import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport * as THREE from \"three\"\nimport { extend } from '@react-three/fiber'\nimport { InstancedUniformsMesh } from 'three-instanced-uniforms-mesh'\nimport model from '../../../Assets/Stalls/type2-centerDraco.glb'\n\nextend({ InstancedUniformsMesh })\n\nexport default function Model({positionData, color}) {\n\n  const group = useRef()\n  const ref1 = useRef()\n  const ref2 = useRef()\n  const ref3 = useRef()\n  const ref4 = useRef()\n  const ref5 = useRef()\n  const ref6 = useRef()\n  const ref7 = useRef()\n  const ref8 = useRef()\n  const ref9 = useRef()\n  const ref10 = useRef()\n  const ref11 = useRef()\n  const ref12 = useRef()\n  const ref13 = useRef()\n \n  const refArr = [ref3, ref4, ref5, ref6, ref7, ref8, ref9, ref10, ref11, ref12, ref13]\n\n  const { nodes, materials } = useGLTF(model)\n\n  const dummy = React.useMemo(() => new THREE.Object3D(), [])\n  const threeColor = React.useMemo(() => new THREE.Color(), [])\n\n  React.useLayoutEffect(() => {\n\n    positionData.map((b, index) => {\n        dummy.position.set(b[0] *34 , b[2]*30, -0.15*30)\n        const r = b[2] > 0 ? 1 : 0\n        dummy.rotation.set(0, 0, r*Math.PI)\n        dummy.updateMatrix()         \n\n        refArr.map(r => {\n          r.current.setMatrixAt(index, dummy.matrix)\n        })\n\n\n        threeColor.set(color[index])\n        \n        ref9.current.setUniformAt('diffuse', index, threeColor)\n        ref1.current.setUniformAt('diffuse', index, threeColor)\n        \n    \n    })\n    refArr.map(r => {\n      r.current.instanceMatrix.needsUpdate = true\n    })\n  }, [positionData])\n\n\n  \n\n  return (\n    <group ref={group} dispose={null} scale={[3,3,3]}>\n      <group rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\n        <group position={[53.7, -64.37, 0]}>\n          <instancedUniformsMesh\n            ref={ref1}\n            args={[nodes.Mesh010.geometry ,null, positionData.length]}\n            material={materials['Theme_color_glow.002']} />\n          <instancedMesh\n            ref={ref2}\n            args={[ nodes.Mesh010_1.geometry,null, positionData.length]}\n            material={materials.AO} />\n        </group>\n        <instancedMesh\n          ref={ref3}\n          args={[ nodes.Mesh009.geometry,null, positionData.length]}\n          material={materials.ligts_Matt} />\n        <instancedMesh\n          ref={ref4}\n          args={[ nodes.Mesh009_1.geometry,null, positionData.length]}\n          material={materials.Light_Emision} />\n        <instancedMesh\n          ref={ref5}\n          args={[ nodes.Mesh008.geometry,null, positionData.length]}\n          material={materials.white_color_2} />\n        <instancedMesh\n          ref={ref6}\n          args={[ nodes.Mesh008_1.geometry,null, positionData.length]}\n          material={materials['white_color.001']} />\n        <instancedMesh\n          ref={ref7}\n          args={[ nodes.Mesh008_2.geometry,null, positionData.length]}\n          material={materials.Base_Matt} />\n        <instancedMesh\n          ref={ref8}\n          args={[ nodes.Mesh008_3.geometry,null, positionData.length]}\n          material={materials['white_color_glow.001']} />\n        <instancedUniformsMesh\n          ref={ref9}\n          args={[ nodes.Mesh008_4.geometry,null, positionData.length]}\n          material={materials['Theme_color.002']} />\n        <instancedMesh\n          ref={ref10}\n          args={[ nodes.Mesh008_5.geometry,null, positionData.length]}\n          material={materials.Roof} />\n        <instancedMesh\n          ref={ref11}\n          args={[ nodes.Mesh008_6.geometry,null, positionData.length]}\n          material={materials.Gray_Matt} />\n        <instancedMesh\n         ref={ref12}\n         args={[ nodes.Mesh008_7.geometry,null, positionData.length]}\n         material={materials.glow} />\n        <instancedMesh\n          ref={ref13}\n          args={[ nodes.Mesh008_8.geometry,null, positionData.length]}\n          material={materials.Stand_Metal} />\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/type2-cornerDraco.55c842d8.glb\";","import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport * as THREE from \"three\"\nimport { extend } from '@react-three/fiber'\nimport { InstancedUniformsMesh } from 'three-instanced-uniforms-mesh'\nimport model from '../../../Assets/Stalls/type2-cornerDraco.glb'\n\nextend({ InstancedUniformsMesh })\n\nexport default function Model({positionData, color}) {\n  const group = useRef()\n  const ref1 = useRef()\n  const ref2 = useRef()\n  const ref3 = useRef()\n  const ref4 = useRef()\n  const ref5 = useRef()\n  const ref6 = useRef()\n  const ref7 = useRef()\n  const ref8 = useRef()\n  const ref9 = useRef()\n \n  const refArr = [ref3, ref4, ref5, ref6, ref7, ref8, ref9]\n\n  const { nodes, materials } = useGLTF(model)\n\n  const dummy = React.useMemo(() => new THREE.Object3D(), [])\n  const threeColor = React.useMemo(() => new THREE.Color(), [])\n\n  React.useLayoutEffect(() => {\n\n    positionData.map((b, index) => {\n        dummy.position.set(b[0] *34 , b[2]*30, -0.15*30)\n        const r = b[2] > 0 ? 1 : 0\n        dummy.rotation.set(0, 0, r*Math.PI)\n        dummy.updateMatrix()         \n\n        refArr.map(r => {\n          r.current.setMatrixAt(index, dummy.matrix)\n        })\n\n\n        threeColor.set(color[index])\n        \n        ref4.current.setUniformAt('diffuse', index, threeColor)\n        ref6.current.setUniformAt('diffuse', index, threeColor)\n        \n    \n    })\n    refArr.map(r => {\n      r.current.instanceMatrix.needsUpdate = true\n    })\n  }, [positionData])\n\n\n  return (\n    <group ref={group} scale={[3,3,3]} dispose={null}>\n      <group rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\n        <instancedMesh \n          ref={ref8}\n          args={[ nodes.Mesh016.geometry,null, positionData.length]}\n          material={materials['Base_AO1.002']} />\n        <instancedMesh \n          ref={ref9}\n          args={[ nodes.Mesh016_1.geometry,null, positionData.length]}\n          material={materials.Theme_color_glow_AO} />\n        <instancedMesh \n          ref={ref1}\n          args={[ nodes.Mesh015.geometry,null, positionData.length]}\n          material={materials.light_metal_matt} />\n        <instancedMesh \n          ref={ref2}\n          args={[ nodes.Mesh015_1.geometry,null, positionData.length]}\n          material={materials['Light_Emision.002']} />\n        <instancedMesh \n          ref={ref3}\n          args={[ nodes.Mesh014.geometry,null, positionData.length]}\n          material={materials['white_color.003']} />\n        <instancedUniformsMesh \n          ref={ref4}\n          args={[ nodes.Mesh014_1.geometry,null, positionData.length]}\n          material={materials['Theme_color_glow.004']} />\n        <instancedMesh \n          ref={ref5}\n          args={[ nodes.Mesh014_2.geometry,null, positionData.length]}\n          material={materials.Floor} />\n        <instancedUniformsMesh \n          ref={ref6}\n          args={[ nodes.Mesh014_3.geometry,null, positionData.length]}\n          material={materials['Theme_color.004']} />\n        <instancedMesh \n          ref={ref7}\n          args={[ nodes.Mesh014_4.geometry,null, positionData.length]}\n          material={materials['white_color_glow.003']} />\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/type3-centerDraco.a415ebce.glb\";","export default __webpack_public_path__ + \"static/media/ReceptionDraco.89e65baa.glb\";","import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport * as THREE from \"three\"\nimport { extend } from '@react-three/fiber'\nimport { InstancedUniformsMesh } from 'three-instanced-uniforms-mesh'\nimport model from \"../../../../Assets/Stalls/ReceptionTable/ReceptionDraco.glb\"\n\nextend({ InstancedUniformsMesh })\n\n// let instanceSize = 0\n\n// const rpos = [\n//   [-57.5, 5, -80],\n//   [-7.5, 5, 80],\n//   [-7.5, 5, -80],\n//   [42.5, 5, 80],\n//   [-175, 5, -80],\n//   [-112.5, 5, 80],\n//   [-112.5, 5, -80],\n//   [-57.5, 5, 80],\n//   [42.5, 5, -80],\n//   [105, 5, 80],\n//   [-175, 5, 80],\n//   [105, 5, -80],\n//   [175, 5, 80]\n// ]\n\nconst rTable = {\n  \"type2-center\" : {x : -10, y : 14, z : 0},\n  \"type3-center\" : {x : 9, y : 15, z : 0},\n  \"type2-corner\" : {x : -11, y : 15, z : 0},\n  \"type1-center\" : {x : -7, y : 9, z : 20},\n  \"type1-corner\" : {x : -3, y : 9, z : 20},\n  \"type3-corner\" : {x : 14, y : 14, z : 20},\n}\n\nexport default function Model({data, instanceSize}) {\n  const stallData = {...data}\n  const group = useRef()\n  const ref1 = useRef()\n  const ref2 = useRef()\n  const ref3 = useRef()\n  const ref4 = useRef()\n  const ref5 = useRef()\n  const ref6 = useRef()\n\n  const refArr = [ref1, ref2, ref3, ref4, ref5, ref6]\n\n  const { nodes, materials } = useGLTF(model)\n  delete stallData[\"type3-center\"]\n  delete stallData[\"type3-corner\"]\n  const dataArray = Object.values(stallData)\n  const typeArray = Object.keys(stallData)\n\n\n  const dummy = React.useMemo(() => new THREE.Object3D(), [])\n  const threeColor = React.useMemo(() => new THREE.Color(), [])\n\n  React.useLayoutEffect(() => {\n    let j = 0\n    dataArray.forEach((ele, index) => {\n      const posArr = ele.pos\n      const colorArr = ele.color\n      const offset = rTable[typeArray[index]]\n          posArr.forEach((position, i) => {\n            dummy.position.set((position[0] + (offset.x*Math.sign(-position[2])))*34, (position[2] + (offset.y*Math.sign(-position[2])))*30, -(position[1]+offset.z))\n            const r = position[2] > 0 ? 1 : 0\n            dummy.rotation.set(0, 0, Math.PI*r)\n            dummy.updateMatrix()\n            refArr.forEach((r) => {\n              r.current.setMatrixAt(j, dummy.matrix)\n            })\n            threeColor.set(colorArr[i])\n            \n            ref2.current.setUniformAt('diffuse', j, threeColor)\n            ref5.current.setUniformAt('diffuse', j, threeColor)\n            j += 1\n          })\n    })\n\n    refArr.forEach((r) => {\n      r.current.instanceMatrix.needsUpdate = true\n    })\n\n  }, [data])\n\n\n\n  return (\n    <group ref={group} scale={[3,3,3]} dispose={null}>\n      <group rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\n        <instancedMesh\n         ref={ref1}\n         args={[nodes.Base_AO.geometry, null, instanceSize]}\n         material={materials.Base_AO1} />\n        <group position={[0, 0, 0.02]}>\n          <instancedUniformsMesh\n           ref={ref2}\n           args={[nodes.Mesh.geometry, null, instanceSize]}\n           material={materials.Theme_color} />\n          <instancedMesh\n           ref={ref3}\n           args={[nodes.Mesh_1.geometry, null, instanceSize]}\n           material={materials.white_color} \n           />\n          <instancedMesh\n           ref={ref4}\n           args={[nodes.Mesh_2.geometry, null, instanceSize]}\n           material={materials.glass} />\n          <instancedUniformsMesh \n           ref={ref5}\n           args={[nodes.Mesh_3.geometry, null, instanceSize]}\n           material={materials.Theme_color_glow} />\n          <instancedMesh\n           ref={ref6}\n           args={[nodes.Mesh_4.geometry, null, instanceSize]}\n           material={materials.white_color_glow} />\n        </group>\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport * as THREE from \"three\"\nimport { extend } from '@react-three/fiber'\nimport { InstancedUniformsMesh } from 'three-instanced-uniforms-mesh'\nimport model from '../../../Assets/Stalls/type3-centerDraco.glb'\n\nimport ReceptionDraco from \"./ReceptionTable/ReceptionDraco\"\n\nextend({ InstancedUniformsMesh })\n\nexport default function Model({positionData, color}) {\n  const group = useRef()\n  const ref1 = useRef()\n  const ref2 = useRef()\n  const ref3 = useRef()\n  const ref4 = useRef()\n  const ref5 = useRef()\n  const ref6 = useRef()\n  const ref7 = useRef()\n  const ref8 = useRef()\n  const ref9 = useRef()\n  const ref10 = useRef()\n  const ref11 = useRef()\n  const ref12 = useRef()\n  const ref13 = useRef()\n \n  const refArr = [ref3, ref4, ref5, ref6, ref7, ref8, ref9, ref10, ref11, ref12, ref13]\n\n  const { nodes, materials } = useGLTF(model)\n\n  const dummy = React.useMemo(() => new THREE.Object3D(), [])\n  const threeColor = React.useMemo(() => new THREE.Color(), [])\n\n  React.useLayoutEffect(() => {\n\n    positionData.map((b, index) => {\n        dummy.position.set(b[0] *34 , b[2]*34, -0.15*30)\n        let r = b[2] > 0 ? 1 : 0\n        dummy.rotation.set(0, 0, r*Math.PI)\n        dummy.updateMatrix()         \n\n        refArr.map(r => {\n          r.current.setMatrixAt(index, dummy.matrix)\n        })\n\n\n        threeColor.set(color[index])\n        \n        ref7.current.setUniformAt('diffuse', index, threeColor)\n        ref12.current.setUniformAt('diffuse', index, threeColor)\n        \n    \n    })\n    refArr.map(r => {\n      r.current.instanceMatrix.needsUpdate = true\n    })\n  }, [positionData])\n\n\n  return (\n    <>\n      <group ref={group} scale={[3,3,3]} >\n        <group rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\n          <instancedMesh\n          ref={ref1}\n          args={[nodes.Mesh019.geometry ,null, positionData.length]}\n          material={materials['AO.002']} />\n          <instancedMesh\n          ref={ref2}\n          args={[ nodes.Mesh019_1.geometry,null, positionData.length]}\n          material={materials.color_AO} />\n          <instancedMesh\n          ref={ref3}\n          args={[ nodes.Mesh018.geometry,null, positionData.length]}\n          material={materials.ceiling_lights_matt} />\n          <instancedMesh\n          ref={ref4}\n          args={[ nodes.Mesh018_1.geometry,null, positionData.length]}\n          material={materials.ceiling_lights_emision} />\n          <instancedMesh\n          ref={ref5}\n          args={[ nodes.Mesh017.geometry,null, positionData.length]}\n          material={materials['hanging_light_matt.001']} />\n          <instancedMesh\n          ref={ref6}\n          args={[ nodes.Mesh017_1.geometry,null, positionData.length]}\n          material={materials.hanging_light_emision} />\n          <instancedUniformsMesh\n          ref={ref7}\n          args={[ nodes.Mesh020.geometry,null, positionData.length]}\n          material={materials['Theme_color.005']} />\n          <instancedMesh\n          ref={ref8}\n          args={[ nodes.Mesh020_1.geometry,null, positionData.length]}\n          material={materials.color} />\n          <instancedMesh\n          ref={ref9}\n          args={[ nodes.Mesh020_2.geometry,null, positionData.length]}\n          material={materials.Black_matt} />\n          <instancedMesh\n          ref={ref10}\n          args={[ nodes.Mesh020_3.geometry,null, positionData.length]}\n          material={materials['Gry_color.002']} />\n          <instancedMesh\n          ref={ref11}\n          args={[ nodes.Mesh020_4.geometry,null, positionData.length]}\n          material={materials['Floor.001']} />\n          <instancedUniformsMesh\n          ref={ref12}\n          args={[ nodes.Mesh020_5.geometry,null, positionData.length]}\n          material={materials['Theme_color_glow.005']} />\n          <instancedMesh\n          ref={ref13}\n          args={[ nodes.Mesh020_6.geometry,null, positionData.length]}\n          material={materials.LED} />\n        </group>\n        {/* <ReceptionDraco/> */}\n      </group>\n    </>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/type3-cornerDraco.1d6cb66c.glb\";","import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport * as THREE from \"three\"\nimport { extend } from '@react-three/fiber'\nimport { InstancedUniformsMesh } from 'three-instanced-uniforms-mesh'\nimport model from '../../../Assets/Stalls/type3-cornerDraco.glb'\n\nextend({ InstancedUniformsMesh })\n\nexport default function Model({positionData, color}) {\n  const group = useRef()\n  const ref1 = useRef()\n  const ref2 = useRef()\n  const ref3 = useRef()\n  const ref4 = useRef()\n  const ref5 = useRef()\n  const ref6 = useRef()\n  const ref7 = useRef()\n  const ref8 = useRef()\n  const ref9 = useRef()\n  const ref10 = useRef()\n  const ref11 = useRef()\n  const ref12 = useRef()\n \n  const refArr = [ref3, ref4, ref5, ref6, ref7, ref8, ref9, ref10, ref11, ref12]\n\n  const { nodes, materials } = useGLTF(model)\n\n  const dummy = React.useMemo(() => new THREE.Object3D(), [])\n  const threeColor = React.useMemo(() => new THREE.Color(), [])\n\n  React.useLayoutEffect(() => {\n\n    positionData.map((b, index) => {\n        dummy.position.set(b[0] *34 , b[2]*30, -0.15*30)\n        const r = b[2] > 0 ? 1 : 0\n        dummy.rotation.set(0, 0, r*Math.PI)\n        dummy.updateMatrix()         \n\n        refArr.map(r => {\n          r.current.setMatrixAt(index, dummy.matrix)\n        })\n\n\n        threeColor.set(color[index])\n        \n        ref8.current.setUniformAt('diffuse', index, threeColor)\n        // ref12.current.setUniformAt('diffuse', index, threeColor)\n        \n    \n    })\n    refArr.map(r => {\n      r.current.instanceMatrix.needsUpdate = true\n    })\n  }, [positionData])\n\n\n  return (\n    <group ref={group} scale={[3,3,3]}  dispose={null}>\n      <group rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\n        <instancedMesh\n         ref={ref1}\n         args={[ nodes.Mesh021.geometry, null, positionData.length]}\n         material={materials.Base_AO_2} />\n        <instancedMesh\n         ref={ref2}\n         args={[ nodes.Mesh021_1.geometry, null, positionData.length]}\n         material={materials['Base_AO1.003']} />\n        <instancedMesh\n         ref={ref3}\n         args={[ nodes.Mesh022.geometry, null, positionData.length]}\n         material={materials['ligts_Matt.002']} />\n        <instancedMesh\n         ref={ref4}\n         args={[ nodes.Mesh022_1.geometry, null, positionData.length]}\n         material={materials.emision_matt} />\n        <instancedMesh\n         ref={ref5}\n         args={[ nodes.Mesh023.geometry, null, positionData.length]}\n         material={materials['hanging_light_matt.002']} />\n        <instancedMesh\n         ref={ref6}\n         args={[ nodes.Mesh023_1.geometry, null, positionData.length]}\n         material={materials.Emision_matt2} />\n        <instancedMesh\n         ref={ref7}\n         args={[ nodes.Mesh024.geometry, null, positionData.length]}\n         material={materials.Gry_standee} />\n        <instancedUniformsMesh\n         ref={ref8}\n         args={[ nodes.Mesh024_1.geometry, null, positionData.length]}\n         material={materials.Theem_color} />\n        <instancedMesh\n         ref={ref9}\n         args={[ nodes.Mesh024_2.geometry, null, positionData.length]}\n         material={materials['white_color.004']} />\n        <instancedMesh\n         ref={ref10}\n         args={[ nodes.Mesh024_3.geometry, null, positionData.length]}\n         material={materials.gry} />\n        <instancedMesh\n         ref={ref11}\n         args={[ nodes.Mesh024_4.geometry, null, positionData.length]}\n         material={materials['floor.002']} />\n        <instancedMesh\n         ref={ref12}\n         args={[ nodes.Mesh024_5.geometry, null, positionData.length]}\n         material={materials.white_color_glow1} />\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/LeftWall.bbc8020b.glb\";","export default __webpack_public_path__ + \"static/media/LightMap.e3b8bece.jpg\";","export default __webpack_public_path__ + \"static/media/Side_Walls_AO.c42d3260.jpg\";","export default __webpack_public_path__ + \"static/media/Side_Walls_emisionmaop.1895acb6.jpg\";","import React, { useRef } from 'react'\r\nimport { useGLTF, useTexture } from '@react-three/drei'\r\nimport * as THREE from \"three\"\r\nimport leftWall from \"../../../Assets/Walls/LeftWall/LeftWall.glb\"\r\nimport light from \"../../../Assets/Walls/LeftWall/LightMap.jpg\"\r\nimport ao from \"../../../Assets/Walls/LeftWall/Side_Walls_AO.jpg\"\r\nimport emission from \"../../../Assets/Walls/LeftWall/Side_Walls_emisionmaop.jpg\"\r\n\r\nexport default function Model({size, position}) {\r\n  const group = useRef()\r\n  const ref1 = useRef()\r\n  const ref2 = useRef()\r\n  const ref3 = useRef()\r\n  const { nodes, materials } = useGLTF(leftWall)\r\n\r\n  const refArr = [ref1, ref2, ref3]\r\n\r\n  const [lightMap, aoMap, emissionMap] = useTexture([light, ao, emission])\r\n\r\n  lightMap.flipY = false\r\n  aoMap.flipY = false\r\n  lightMap.encoding = THREE.RGBFormat\r\n  aoMap.encoding = THREE.RGBFormat\r\n  emissionMap.encoding = THREE.RGBFormat\r\n\r\n  const m = React.useMemo(() => new THREE.MeshPhongMaterial({\r\n      aoMap : aoMap,\r\n      // aoMapIntensity : 3,\r\n      lightMap : lightMap,\r\n      // lightMapIntensity : 3,\r\n      emissiveMap : emissionMap,\r\n      emissiveIntensity : 15,\r\n      map: lightMap,\r\n      // side : THREE.DoubleSide,\r\n      color : \"rgb(180, 180 ,180)\"\r\n  }), [])\r\n\r\n  const m3 = React.useMemo(() => new THREE.MeshPhongMaterial({\r\n    aoMap : aoMap,\r\n    aoMapIntensity : 3,\r\n    lightMap : lightMap,\r\n    // lightMapIntensity : 3,\r\n    emissiveMap : emissionMap,\r\n    emissiveIntensity : 15,\r\n    map: lightMap,\r\n    // side : THREE.DoubleSide,\r\n    color : \"rgb(180, 180 ,180)\"\r\n}), [])\r\n\r\n  const m2 = React.useMemo(() => new THREE.MeshPhongMaterial({\r\n    aoMap : aoMap,\r\n    // aoMapIntensity : 3,\r\n    lightMap : lightMap,\r\n    // lightMapIntensity : 3,\r\n    color : \"rgb(95, 95, 95)\",\r\n    map: lightMap,\r\n    // side : THREE.DoubleSide\r\n}), [])\r\n\r\n    const dummy = React.useMemo(() => new THREE.Object3D(), [])\r\n\r\n  React.useLayoutEffect(() => {\r\n      const arraySize = Math.round(size/27) + 2\r\n      Array(arraySize).fill(null).map((b, index) => {\r\n          dummy.position.set(index*300 - (size*6), 0, 0)\r\n          dummy.updateMatrix()\r\n          refArr.map(r => {\r\n              r.current.setMatrixAt(index, dummy.matrix)\r\n            })\r\n      })\r\n\r\n      refArr.map(r => {\r\n          r.current.instanceMatrix.needsUpdate = true\r\n        })\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <group ref={group} position={position} scale={[3,3,3]} dispose={null}>\r\n      <group position={[0, 0, 0]} rotation={[Math.PI / 2, 0, 0]} scale={[0.03, 0.03, 0.03]}>\r\n        <instancedMesh \r\n            ref={ref1}\r\n            args ={[nodes.Mesh001.geometry,null, Math.round(size/27)+2]}\r\n            material={m}/>\r\n        <instancedMesh \r\n            ref={ref2}\r\n            args ={[nodes.Mesh001_1.geometry,null, Math.round(size/27)+2]}\r\n            material={m3} />\r\n        <instancedMesh \r\n            ref={ref3}\r\n            args ={[nodes.Mesh001_2.geometry,null, Math.round(size/27)+2]}\r\n            material={m2}/>\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload(leftWall)\r\n","export default __webpack_public_path__ + \"static/media/RightWallDraco.ca62b60b.glb\";","import React, { useRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport model from \"../../../Assets/Walls/Rightwall/RightWallDraco.glb\";\n\nexport default function Model({ size, position }) {\n  const group = useRef();\n  const ref1 = useRef();\n  const ref2 = useRef();\n  const { nodes, materials } = useGLTF(model);\n\n  const dummy = React.useMemo(() => new THREE.Object3D(), []);\n\n  React.useLayoutEffect(() => {\n    const arraySize = Math.round(size / 27) + 2;\n    Array(arraySize)\n      .fill(null)\n      .map((a, index) => {\n        dummy.position.set(index * 305 - size * 6, 0, 0);\n        dummy.updateMatrix();\n        ref1.current.setMatrixAt(index, dummy.matrix);\n        ref2.current.setMatrixAt(index, dummy.matrix);\n      });\n    ref1.current.instanceMatrix.needsUpdate = true;\n    ref2.current.instanceMatrix.needsUpdate = true;\n  }, []);\n\n  return (\n    <group position={position} ref={group} scale={[9, 9, 9]} dispose={null}>\n      <group\n        position={[0, 0, 0]}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[0.01, 0.01, 0.01]}\n      >\n        <instancedMesh\n          ref={ref1}\n          args={[nodes.Mesh002.geometry, null, Math.round(size / 27) + 2]}\n          material={materials[\"Wall.001\"]}\n        />\n        <instancedMesh\n          ref={ref2}\n          args={[nodes.Mesh002_1.geometry, null, Math.round(size / 27) + 2]}\n          material={materials[\"Light.001\"]}\n        />\n      </group>\n    </group>\n  );\n}\n\nuseGLTF.preload(model);\n","export default __webpack_public_path__ + \"static/media/FrontWall.ead950a7.glb\";","import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport * as THREE from 'three'\nimport model from \"../../../Assets/Walls/FrontWall/FrontWall.glb\"\n\nexport default function Model({ size }) {\n  const group = useRef()\n  const ref = useRef()\n  const { nodes, materials } = useGLTF(model)\n  const dummy = React.useMemo(() => new THREE.Object3D(), [])\n\n  React.useLayoutEffect(() => {\n    const i = [-1, 1]\n    for (let index = 0; index < 2; index++) {\n      dummy.position.set(((size/2)+(size/15)) * 30 * i[index], 0, 0)\n      dummy.updateMatrix()\n      ref.current.setMatrixAt(index, dummy.matrix)\n    }\n    ref.current.instanceMatrix.needsUpdate = true\n  }, [size])\n\n  return (\n    <group ref={group} scale={[3, 9, 6]} dispose={null}>\n      <instancedMesh\n        ref={ref}\n        args={[nodes.front_Wall.geometry, null, 2]}\n        material={materials.Wall2}\n        position={[-0.41, -0.04, -15.75]}\n        rotation={[Math.PI / 2, 0, 0]}\n        scale={[0.01, 0.01, 0.01]}\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/Grey Noise.9708d7b4.jpg\";","export default __webpack_public_path__ + \"static/media/Grey Noise Normal.01faed7d.jpg\";","import React, {useRef} from 'react'\r\nimport * as THREE from \"three\"\r\nimport { useLoader, useThree } from \"@react-three/fiber\"\r\nimport { usePlane } from \"@react-three/cannon\"\r\nimport groundTex from \"../../../Assets/Ground/Grey Noise.jpg\"\r\nimport groundNorm from \"../../../Assets/Ground/Grey Noise Normal.jpg\"\r\n\r\nconst Ground = ({size}) => {\r\n    const [ref] = usePlane(() => ({ rotation: [-Math.PI / 2, 0, 0], position : [0,0,0] }))\r\n\r\n\r\n    const texture = useLoader(THREE.TextureLoader, groundTex)\r\n    const normTex = useLoader(THREE.TextureLoader, groundNorm)\r\n    texture.wrapS = texture.wrapT = THREE.RepeatWrapping\r\n    texture.repeat.set(100, 100)\r\n\r\n\r\n    return (\r\n      <mesh \r\n        ref={ref} \r\n        receiveShadow>\r\n        <planeGeometry args={[size+50,350]} />\r\n        <meshStandardMaterial\r\n          map={texture}\r\n          color=\"#323231\"\r\n          side = {THREE.DoubleSide}\r\n          normalMap = {normTex}\r\n        />\r\n      </mesh>\r\n    )\r\n}\r\n\r\nexport default Ground\r\n","export default __webpack_public_path__ + \"static/media/Reception2.a8f9b458.glb\";","import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport * as THREE from \"three\"\nimport model from \"../../../../Assets/Stalls/ReceptionTable/Reception2.glb\"\n\nconst rTable = {\n  \"type3-center\" : {x : 9, y : 14, z : 0},\n  \"type3-corner\" : {x : 14, y : 14, z : 20}\n}\n\nexport default function Model({data}) {\n  const stallData = {...data}\n  const group = useRef()\n  const ref1 = useRef()\n  const ref2 = useRef()\n  const ref3 = useRef()\n  const ref4 = useRef()\n  const ref5 = useRef()\n\n  const refArr = [ref1, ref2, ref3, ref4, ref5]\n\n  const { nodes, materials } = useGLTF(model)\n  delete stallData[\"type2-center\"]\n  delete stallData[\"type2-corner\"]\n  delete stallData[\"type1-center\"]\n  delete stallData[\"type1-corner\"]\n  const dataArray = Object.values(stallData)\n  const typeArray = Object.keys(stallData)\n\nconsole.log(dataArray)\n  const dummy = React.useMemo(() => new THREE.Object3D(), [])\n  const threeColor = React.useMemo(() => new THREE.Color(), [])\n\n  React.useLayoutEffect(() => {\n    let j = 0\n    dataArray.forEach((ele, index) => {\n      const posArr = ele.pos\n      const colorArr = ele.color\n      const offset = rTable[typeArray[index]]\n          posArr.forEach((position, i) => {\n            dummy.position.set((position[0] + (offset.x*Math.sign(-position[2])))*34, (position[2] + (offset.y*Math.sign(-position[2])))*30, -(position[1]+offset.z))\n            const r = position[2] > 0 ? 1 : 0\n            dummy.rotation.set(0, 0, Math.PI*r)\n            dummy.updateMatrix()\n            refArr.forEach((r) => {\n              r.current.setMatrixAt(j, dummy.matrix)\n            })\n            threeColor.set(colorArr[i])\n            \n            // ref2.current.setUniformAt('diffuse', j, threeColor)\n            // ref5.current.setUniformAt('diffuse', j, threeColor)\n            j += 1\n          })\n    })\n\n    refArr.forEach((r) => {\n      r.current.instanceMatrix.needsUpdate = true\n    })\n\n  }, [data])\n\n  return (\n    <group ref={group} scale={[3,3,3]} dispose={null}>\n      <group rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\n        <instancedMesh\n          ref={ref1}\n          args={[nodes.Base.geometry, null, dataArray.length]}\n          material={materials.Base_AO2} />\n        <instancedMesh\n          ref={ref2}\n          args={[nodes.Mesh003.geometry, null, dataArray.length]}\n          material={materials.Glass} />\n        <instancedMesh\n          ref={ref3}\n          args={[nodes.Mesh003_1.geometry, null, dataArray.length]}\n          material={materials.Metal_Matt} \n          color ={\"red\"}\n          />\n        <instancedMesh\n          ref={ref4}\n          args={[nodes.Mesh003_2.geometry, null, dataArray.length]}\n          material={materials.white_color_glow} />\n        <instancedMesh\n          ref={ref5}\n          args={[nodes.Mesh003_3.geometry, null, dataArray.length]}\n          material={materials.white_color} />\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/Broucher.0aa62824.glb\";","import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport * as THREE from \"three\"\nimport model from \"../../../../Assets/Stalls/Broucher/Broucher.glb\"\n\nconst broucherData = {\n  \"type2-center\" : {\n    position : [{x : -4, y : 14, z : -5.5}, {x : 8, y : 11.5, z : -5.5}]\n  },\n  \"type3-center\" : {\n    position : [\n      {x : 1, y : 14, z : -5.5},\n      {x : 16, y : 14, z : -5.5},\n      {x : 30, y : 14, z : -5.5},\n      {x : -10, y : 10, z : -5.5},\n    ]\n  },\n  \"type2-corner\" : {\n    position : [{x : -5, y : 15, z : -5.5},{x : 8, y : 15, z : -5.5}]\n  },\n  \"type1-center\" : {\n    position : [{x : 7, y : 9, z : -5.5}]\n  },\n  \"type1-corner\" : {\n    position : [{x : 7, y : 9, z : -5.5}]\n  },\n  \"type3-corner\" : {\n    position : [\n      {x : 7, y : 14, z : -5.5},\n      {x : 20, y : 14, z : -5.5},\n      {x : -20, y : 10, z : -5.5},\n    ]\n  },\n}\n\nlet instancing = 0\nlet matrixIndex = 0\n\nexport default function Model({data, instanceSize}) {\n\n  const [loaded, setLoaded] = React.useState(false)\n\n  const group = useRef()\n  const ref1 = useRef()\n  const ref2 = useRef()\n  const ref3 = useRef()\n  const ref4 = useRef()\n  const ref5 = useRef()\n  const ref6 = useRef()\n\n  const refArr = [ref1, ref2, ref3, ref4, ref5, ref6]\n\n  const { nodes, materials } = useGLTF(model)\n\n  const dataArray = Object.values(data)\n  const typeArray = Object.keys(data)\n\n  const dummy = React.useMemo(() => new THREE.Object3D(), [])\n\n  React.useLayoutEffect(() => {\n    \n\n    if(loaded === true){\n      const offsetArray = Object.values(broucherData)\n      const offsetTypeArray = Object.keys(broucherData)\n      let k = 0\n      \n      offsetArray.forEach((offData, index) => {\n        const element = offData.position\n        \n        element.forEach((ele, i) => {\n          const stall = data[offsetTypeArray[index]].pos\n          \n          stall.forEach((posi) => {\n            dummy.position.set((posi[0]+(ele.x* Math.sign(-posi[2])))*34, (posi[2]+(ele.y* Math.sign(-posi[2])))*30, -(posi[1]+ele.z)*30)\n            const r = posi[2] > 0 ? 1 : 0\n            dummy.rotation.set(0, 0, Math.PI*r)\n            dummy.updateMatrix()\n\n            refArr.forEach((r) => {\n                r.current.setMatrixAt( matrixIndex, dummy.matrix)\n            })\n            matrixIndex += 1\n          })\n\n        })\n      })\n\n      refArr.forEach((r) => {\n        r.current.instanceMatrix.needsUpdate = true\n      })\n\n\n\n    } else{\n      dataArray.forEach((d, index) => {\n        const noOfStall = d.pos.length\n        if(typeArray[index] === \"type1-center\" || typeArray[index] === \"type1-corner\"){\n          instancing += noOfStall * 1\n        } else if(typeArray[index] === \"type2-center\" || typeArray[index] === \"type2-corner\"){\n          instancing += noOfStall * 2\n        } else {\n          instancing += noOfStall * 4\n        }\n      })\n\n    }\n\n    setLoaded(true)\n\n\n  }, [loaded, data])\n\n\n  return (\n    <>\n      {loaded === true ? (\n        <group ref={group} position={[0, 1, 0]} scale={[3,3,3]} dispose={null}>\n          <group rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\n            <instancedMesh\n              ref={ref1}\n              args ={[ nodes.Base.geometry, null, instancing]}\n              material={materials.Base_AO} />\n            <instancedMesh\n              ref={ref2}\n              args ={[ nodes.Browser.geometry, null, instancing]}\n              material={materials.Browsers_Matt} />\n            <instancedMesh\n              ref={ref3}\n              args ={[ nodes.Mesh002.geometry, null, instancing]}\n              material={materials.Metal_matt} />\n            <instancedMesh\n              ref={ref4}\n              args ={[ nodes.Mesh002_1.geometry, null, instancing]}\n              material={materials.Glass_opeq} />\n            <instancedMesh\n              ref={ref5}\n              args ={[ nodes.Mesh002_2.geometry, null, instancing]}\n              material={materials.Glass} />\n            <instancedMesh\n              ref={ref6}\n              args ={[ nodes.Mesh002_3.geometry, null, instancing]}\n              material={materials.Black_Plastic} />\n          </group>\n        </group>\n      ) : null}\n    </>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/VCTable.355cbc60.glb\";","import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport * as THREE from \"three\"\nimport { extend } from '@react-three/fiber'\nimport { InstancedUniformsMesh } from 'three-instanced-uniforms-mesh'\nimport model from \"../../../../Assets/Stalls/VCTable/VCTable.glb\"\n\nextend({ InstancedUniformsMesh })\n\nconst tableData = {\n  \"type2-center\" : {\n    position : [{x : -13, y : 2, z : 0}]\n  },\n  \"type3-center\" : {\n    position : [\n      {x : -10, y : -6, z : -16},\n      {x : 30, y : -6, z : -16}\n    ]\n  },\n  \"type2-corner\" : {\n    position : [{x : -14, y : 2, z : 0}]\n  },\n  \"type1-center\" : {\n    position : [{x : -9, y : 0, z : 20}]\n  },\n  \"type1-corner\" : {\n    position : [{x : -7, y : 0, z : 20}]\n  },\n  \"type3-corner\" : {\n    position : [\n      {x : -4, y : 10, z : -16},\n      {x : 18, y : -4, z : -16}\n    ]\n  },\n}\n\nlet instancing = 0\nlet matrixIndex = 0\n\nexport default function Model({data}) {\n  const [loaded, setLoaded] = React.useState(false)\n\n  const group = useRef()\n  const ref1 = useRef()\n  const ref2 = useRef()\n  const ref3 = useRef()\n  const ref4 = useRef()\n\n  const refArr = [ref1, ref2, ref3, ref4]\n\n  const { nodes, materials } = useGLTF(model)\n\n  const dataArray = Object.values(data)\n  const typeArray = Object.keys(data)\n\n  const dummy = React.useMemo(() => new THREE.Object3D(), [])\n  const threeColor = React.useMemo(() => new THREE.Color(), [])\n\n  React.useLayoutEffect(() => {\n    if(loaded === true){\n      const offsetArray = Object.values(tableData)\n      const offsetTypeArray = Object.keys(tableData)\n      let k = 0\n      \n      offsetArray.forEach((offData, index) => {\n        const element = offData.position\n        \n        element.forEach((ele, i) => {\n          const stall = data[offsetTypeArray[index]].pos\n          const stallColor = data[offsetTypeArray[index]].color\n          // console.log(stallColor, stall)\n          stall.forEach((posi, ind) => {\n            dummy.position.set((posi[0]+(ele.x* Math.sign(-posi[2])))*34, (posi[2]+(ele.y* Math.sign(-posi[2])))*30, -posi[1])\n            // dummy.rotation.set(Math.PI/2, 0, 0)\n            dummy.updateMatrix()\n\n            refArr.forEach((r) => {\n                r.current.setMatrixAt( matrixIndex, dummy.matrix)\n            })\n            threeColor.set(stallColor[ind])\n        \n            ref4.current.setUniformAt('diffuse', matrixIndex, threeColor)\n            matrixIndex += 1\n          })\n\n        })\n      })\n\n      refArr.forEach((r) => {\n        r.current.instanceMatrix.needsUpdate = true\n      })\n\n\n\n    } else{\n      dataArray.forEach((d, index) => {\n        const noOfStall = d.pos.length\n        if(typeArray[index] === \"type1-center\" || typeArray[index] === \"type1-corner\"){\n          instancing += noOfStall * 1\n        } else if(typeArray[index] === \"type2-center\" || typeArray[index] === \"type2-corner\"){\n          instancing += noOfStall * 1\n        } else {\n          instancing += noOfStall * 2\n        }\n      })\n\n    }\n\n    setLoaded(true)\n\n\n  }, [loaded, data])\n\n\n\n\n  return (\n    <group ref={group} scale={[3,3,3]} dispose={null}>\n      <group rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\n        <instancedMesh\n          ref={ref1}\n          args={[ nodes.Base_AO.geometry, null, instancing]}\n          material={materials.Base_AO1} />\n        <instancedMesh\n          ref={ref2}\n          args={[ nodes.Mesh.geometry, null, instancing]}\n          material={materials.white_color} />\n        <instancedMesh\n          ref={ref3}\n          args={[ nodes.Mesh_1.geometry, null, instancing]}\n          material={materials.white_color_Glow} />\n        <instancedUniformsMesh\n          ref={ref4}\n          args={[ nodes.Mesh_2.geometry, null, instancing]}\n          material={materials.Theme_color} />     \n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/KTv.9bbf4b92.glb\";","import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport * as THREE from \"three\"\nimport model from \"../../../../Assets/Stalls/KTv/KTv.glb\"\n\nconst tvData = {\n  \"type2-center\" : {\n    position : [{x : 15, y : 4, z : -16, r: Math.PI/2}]\n  },\n  \"type3-center\" : {\n    position : [\n      {x : -10, y : 4, z : -16, r: -Math.PI/2},\n      {x : 30, y : 4, z : -16, r : Math.PI/2}\n    ]\n  },\n  \"type2-corner\" : {\n    position : [{x : -5, y : -11, z : 0, r: 0}]\n  },\n  \"type1-center\" : {\n    position : [{x : 10, y : 0, z : 20, r: Math.PI/2}]\n  },\n  \"type1-corner\" : {\n    position : [{x : 12, y : 0, z : 20, r: Math.PI/2}]\n  },\n  \"type3-corner\" : {\n    position : [\n      {x : -22, y : -3, z : -16, r: -Math.PI/2},\n      {x : 18, y : -12, z : -16, r: Math.PI/2},\n    ]\n  },\n}\n\nlet instancing = 0\nlet matrixIndex = 0\n\nexport default function Model({data}) {\n  const [loaded, setLoaded] = React.useState(false)\n\n  const group = useRef()\n  const ref1 = useRef()\n  const ref2 = useRef()\n  const ref3 = useRef()\n  const ref4 = useRef()\n\n  const refArr = [ref1, ref2, ref3, ref4]\n\n  const { nodes, materials } = useGLTF(model)\n\n  const dataArray = Object.values(data)\n  const typeArray = Object.keys(data)\n\n  const dummy = React.useMemo(() => new THREE.Object3D(), [])\n\n  React.useLayoutEffect(() => {\n    \n\n    if(loaded === true){\n      const offsetArray = Object.values(tvData)\n      const offsetTypeArray = Object.keys(tvData)\n      let k = 0\n      \n      offsetArray.forEach((offData, index) => {\n        const element = offData.position\n        \n        element.forEach((ele, i) => {\n          const stall = data[offsetTypeArray[index]].pos\n          \n          stall.forEach((posi) => {\n            dummy.position.set((posi[0]+(ele.x* Math.sign(-posi[2])))*34, (posi[2]+(ele.y* Math.sign(-posi[2])))*30, -posi[1])\n            const R = ele.r > Math.PI/2 ? 1 : 0\n\n            dummy.rotation.set(0, 0, ele.r* Math.sign(posi[2]) + Math.PI/2 * R)\n            dummy.updateMatrix()\n\n            refArr.forEach((r) => {\n                r.current.setMatrixAt( matrixIndex, dummy.matrix)\n            })\n            matrixIndex += 1\n          })\n\n        })\n      })\n\n      refArr.forEach((r) => {\n        r.current.instanceMatrix.needsUpdate = true\n      })\n\n\n\n    } else{\n      dataArray.forEach((d, index) => {\n        const noOfStall = d.pos.length\n        if(typeArray[index] === \"type1-center\" || typeArray[index] === \"type1-corner\"){\n          instancing += noOfStall * 1\n        } else if(typeArray[index] === \"type2-center\" || typeArray[index] === \"type2-corner\"){\n          instancing += noOfStall * 1\n        } else {\n          instancing += noOfStall * 2\n        }\n      })\n\n    }\n\n    setLoaded(true)\n\n\n  }, [loaded, data, tvData])\n\n  return (\n    <group ref={group} scale={[3,3,3]} dispose={null}>\n      <group rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\n        <instancedMesh \n          ref={ref1}\n          args={[ nodes.Base.geometry, null, instancing]}\n          material={materials.Base_AO} />\n        <instancedMesh \n          ref={ref2}\n          args={[ nodes.Mesh001.geometry, null, instancing]}\n          material={materials.frame_color} />\n        <instancedMesh \n          ref={ref3}\n          args={[ nodes.Mesh001_1.geometry, null, instancing]}\n          material={materials.body_paint_matt} />\n        <instancedMesh \n          ref={ref4}\n          args={[ nodes.Mesh001_2.geometry, null, instancing]}\n          material={materials.Display} />\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload(model)\n","export default __webpack_public_path__ + \"static/media/Display.e82bb76c.glb\";","import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport * as THREE from \"three\"\nimport model from \"../../../../Assets/Stalls/Display/Display.glb\"\n\nconst displayData = {\n  \"type2-center\" : {\n    position : [{x : 1, y : -15, z : 1}]\n  },\n  \"type3-center\" : {\n    position : [\n      {x : 6, y : -23, z : 1},\n      {x : 12, y : -23, z : 1}\n    ]\n  },\n  \"type2-corner\" : {\n    position : [{x : 5, y : -11.5, z : 0}]\n  },\n  \"type1-center\" : {\n    position : [{x : 0, y : -8, z : 1}]\n  },\n  \"type1-corner\" : {\n    position : [{x : 0, y : -8, z : 1}]\n  },\n  \"type3-corner\" : {\n    position : [\n      {x :-2, y : -22.5, z : 1},\n      {x :5, y : -22, z : 1},\n    ]\n  },\n}\n\nlet instancing = 0\nlet matrixIndex = 0\n\nexport default function Model({data}) {\n  const [loaded, setLoaded] = React.useState(false)\n\n  const group = useRef()\n  const ref1 = useRef()\n  const ref2 = useRef()\n  const ref3 = useRef()\n\n  const refArr = [ref1, ref2, ref3]\n\n  const { nodes, materials } = useGLTF(model)\n\n  const dataArray = Object.values(data)\n  const typeArray = Object.keys(data)\n\n  const dummy = React.useMemo(() => new THREE.Object3D(), [])\n\n  React.useLayoutEffect(() => {\n    \n\n    if(loaded === true){\n      const offsetArray = Object.values(displayData)\n      const offsetTypeArray = Object.keys(displayData)\n      let k = 0\n      \n      offsetArray.forEach((offData, index) => {\n        const element = offData.position\n        \n        element.forEach((ele, i) => {\n          const stall = data[offsetTypeArray[index]].pos\n          \n          stall.forEach((posi) => {\n            dummy.position.set((posi[0]+(ele.x* Math.sign(-posi[2])))*68, (posi[2]+(ele.y* Math.sign(-posi[2])))*60, -(posi[1]+ele.z)*60)\n            const r = posi[2] < 0 ? 0 : 1\n            dummy.rotation.set(0, 0, Math.PI*r)\n            dummy.updateMatrix()\n\n\n            refArr.forEach((r) => {\n                r.current.setMatrixAt( matrixIndex, dummy.matrix)\n            })\n            matrixIndex += 1\n          })\n\n        })\n      })\n\n      refArr.forEach((r) => {\n        r.current.instanceMatrix.needsUpdate = true\n      })\n\n\n\n    } else{\n      dataArray.forEach((d, index) => {\n        const noOfStall = d.pos.length\n        if(typeArray[index] === \"type1-center\" || typeArray[index] === \"type1-corner\"){\n          instancing += noOfStall * 1\n        } else if(typeArray[index] === \"type2-center\" || typeArray[index] === \"type2-corner\"){\n          instancing += noOfStall * 1\n        } else {\n          instancing += noOfStall * 2\n        }\n      })\n\n    }\n\n    setLoaded(true)\n\n\n  }, [loaded, data])\n\n  \n  return (\n    <>\n      {loaded === true ? (\n        <group ref={group} scale={[3,3,3]} dispose={null}>\n          <group rotation={[Math.PI / 2, 0, 0]} scale={[0.005, 0.005, 0.005]}>\n            {/* <group scale={[0.5, 0.5, 0.5]}> */}\n            <instancedMesh \n              ref={ref1}\n              args={[ nodes.Base_AO.geometry, null, instancing]}\n              material={materials.base_AO} />\n            <instancedMesh \n              ref={ref2}\n              args={[ nodes.Mesh.geometry, null, instancing]}\n              material={materials.Plastic} />\n            <instancedMesh \n              ref={ref3}\n              args={[ nodes.Mesh_1.geometry, null, instancing]}\n              material={materials.Display} />\n            {/* </group> */}\n          </group>\n        </group>\n      ) : null}\n    </>\n  )\n}\n\nuseGLTF.preload(model)\n","import { useTexture } from \"@react-three/drei\";\r\nimport React, { useRef } from \"react\";\r\nimport * as THREE from \"three\";\r\n\r\n// {l : true, x : -13.15, y: -2, r : Math.PI, z: -23},\r\n\r\nlet scalar = 1;\r\n\r\nconst noOfTex = {\r\n  \"type1-center\": 2,\r\n  \"type1-corner\": 2,\r\n  \"type2-center\": 4,\r\n  \"type2-corner\": 4,\r\n  \"type3-center\": 6,\r\n  \"type3-corner\": 5\r\n};\r\n\r\nconst size = {\r\n  \"type1-center\": 0.5,\r\n  \"type1-corner\": 0.5,\r\n  \"type2-center\": 0.6,\r\n  \"type2-corner\": 0.6,\r\n  \"type3-center\": 0.6,\r\n  \"type3-corner\": 0.6\r\n};\r\n\r\nconst noOfLogo = {\r\n  \"type1-center\": 2,\r\n  \"type1-corner\": 2,\r\n  \"type2-center\": 2,\r\n  \"type2-corner\": 2,\r\n  \"type3-center\": 2,\r\n  \"type3-corner\": 2\r\n};\r\n\r\nconst bannerPositions = {\r\n  \"type1-center\": [\r\n    { l: true, x: 0, y: 8.8, r: Math.PI, z: -3.5 },\r\n    { l: false, x: 7, y: 2, r: Math.PI, z: 9 },\r\n    { l: false, x: -7, y: 2, r: Math.PI, z: 9 }\r\n  ],\r\n  \"type1-corner\": [\r\n    { l: true, x: 3, y: 9, r: Math.PI, z: 0.1 },\r\n    { l: false, x: -7, y: 2, r: Math.PI, z: 9.5 },\r\n    { l: false, x: -12.5, y: 2, r: Math.PI / 2, z: 3 }\r\n  ],\r\n\r\n  \"type2-center\": [\r\n    { l: true, x: -5, y: 9, r: Math.PI, z: -11.5 },\r\n    { l: true, x: -5, y: 9, r: Math.PI, z: -11.5 },\r\n    { l: false, x: -12, y: 2, r: Math.PI, z: 15 },\r\n    { l: false, x: 9, y: 2, r: Math.PI, z: 15 },\r\n    { l: false, x: 14.15, y: 2, r: -Math.PI / 2, z: 9.5 },\r\n    { l: false, x: -17, y: 2, r: Math.PI / 2, z: 9.5 }\r\n  ],\r\n\r\n  \"type2-corner\": [\r\n    { l: true, x: 8, y: 8, r: Math.PI, z: 11.95 },\r\n    { l: false, x: 2, y: 2, r: Math.PI, z: 11.95 },\r\n    { l: false, x: -12, y: 2, r: Math.PI, z: 11.95 },\r\n    { l: false, x: -14.5, y: 2, r: Math.PI / 2, z: 6 },\r\n    { l: false, x: -14.5, y: 2, r: Math.PI / 2, z: -5 }\r\n  ],\r\n\r\n  \"type3-corner\": [\r\n    { l: true, x: 4, y: 10, r: Math.PI, z: -15.3 },\r\n    { l: false, x: 17, y: 2, r: Math.PI, z: 22.85 },\r\n    { l: false, x: 9, y: 2, r: Math.PI, z: 22.85 },\r\n    { l: false, x: 22, y: 2, r: -Math.PI / 2, z: -4 },\r\n    { l: false, x: 22, y: 2, r: Math.PI / 2, z: 9 },\r\n    { l: false, x: -12, y: 2, r: Math.PI, z: 22.85 }\r\n  ],\r\n  \"type3-center\": [\r\n    { l: true, x: -9.45, y: 8.5, r: Math.PI, z: -11.5 },\r\n    { l: false, x: 8.5, y: 2, r: Math.PI, z: 23.5 },\r\n    { l: false, x: 1, y: 2, r: Math.PI, z: 23.5 },\r\n    { l: false, x: -18.5, y: 2, r: Math.PI, z: 23.5 },\r\n    { l: false, x: -26, y: 2, r: Math.PI, z: 23.5 },\r\n    { l: false, x: 13.2, y: 2, r: -Math.PI / 2, z: 15 },\r\n    { l: false, x: -31.2, y: 2, r: Math.PI / 2, z: 15 }\r\n  ]\r\n};\r\n\r\nconst BannerInstance = ({ data }) => {\r\n  const instancingSize =\r\n    noOfLogo[data[0]] + data[3].slice(0, noOfTex[data[0]]).length;\r\n  const ref = useRef();\r\n  const images = [];\r\n  data[3].map((img, index) => {\r\n    images.push(img.image_url);\r\n  });\r\n\r\n  const imageTextures = useTexture([data[2], ...images.slice(0, 6)]);\r\n  const dummy = React.useMemo(() => new THREE.Object3D(), []);\r\n  React.useLayoutEffect(() => {\r\n    const stallGlobalPos = data[1];\r\n    const local = bannerPositions[data[0]];\r\n    const instanceAttrib = [];\r\n    let instanceIndex = 0;\r\n\r\n    Array(instancingSize)\r\n      .fill(null)\r\n      .map((inst, index) => {\r\n        const localPos = local[index];\r\n\r\n        if (localPos) {\r\n          if (localPos.l === true) {\r\n            scalar = size[data[0]];\r\n            instanceIndex = 0;\r\n            instanceAttrib.push(instanceIndex);\r\n          } else {\r\n            scalar = 1;\r\n            instanceIndex += 1;\r\n            instanceAttrib.push(instanceIndex);\r\n          }\r\n          dummy.position.set(\r\n            (stallGlobalPos[0] + localPos.x * Math.sign(stallGlobalPos[2])) *\r\n              34,\r\n            (stallGlobalPos[2] + localPos.z * Math.sign(stallGlobalPos[2])) *\r\n              30,\r\n            -(stallGlobalPos[1] + localPos.y) * 30\r\n          );\r\n          if (localPos.r === Math.PI) {\r\n            const r = stallGlobalPos[2] > 0 ? 1 : 0;\r\n            dummy.rotation.set(-Math.PI / 2, localPos.r * r, 0);\r\n          } else {\r\n            dummy.rotation.set(-Math.PI / 2, localPos.r, 0);\r\n          }\r\n          dummy.scale.set(scalar, scalar, scalar);\r\n          dummy.updateMatrix();\r\n          ref.current.setMatrixAt(index, dummy.matrix);\r\n        }\r\n      });\r\n\r\n    ref.current.instanceMatrix.needsUpdate = true;\r\n\r\n    ref.current.geometry.addAttribute(\r\n      \"textureIndex\",\r\n      new THREE.InstancedBufferAttribute(\r\n        new Float32Array([...instanceAttrib]),\r\n        1\r\n      )\r\n    );\r\n    ref.current.material.onBeforeCompile = function (shader) {\r\n      shader.uniforms.textures = { type: \"tv\", value: [...imageTextures] };\r\n      shader.vertexShader = shader.vertexShader\r\n        .replace(\r\n          \"#define STANDARD\",\r\n          `#define STANDARD\r\n                  varying float vTextureIndex;`\r\n        )\r\n        .replace(\r\n          \"#include <common>\",\r\n          `#include <common>\r\n              attribute float textureIndex;`\r\n        )\r\n        .replace(\r\n          \"#include <project_vertex>\",\r\n          `#include <project_vertex>\r\n              vTextureIndex=textureIndex;`\r\n        );\r\n\r\n      const a = function () {\r\n        // let string = [];\r\n        // // const string2 = []\r\n\r\n        // for (let index = 0; index < imageTextures.length; index++) {\r\n        //     string.push(`col += texture2D(textures[${index}], vUv ) * step(${-0.1+index}, x) * step(x, ${0.1+index});`)\r\n        // }\r\n\r\n        return `#include <fog_fragment>\r\n            float x = vTextureIndex;\r\n            vec4 col = vec4(0, 0, 0, 0);\r\n            col += texture2D(textures[0], vUv ) * step(-0.1, x) * step(x, 0.1);\r\n            col += texture2D(textures[1], vUv ) * step(0.9, x) * step(x, 1.1);\r\n            col += texture2D(textures[2], vUv ) * step(1.9, x) * step(x, 2.1);\r\n            col += texture2D(textures[3], vUv ) * step(2.9, x) * step(x, 3.1);\r\n            col += texture2D(textures[4], vUv ) * step(3.1, x) * step(x, 4.1);\r\n            col += texture2D(textures[5], vUv ) * step(4.9, x) * step(x, 5.1);\r\n            col += texture2D(textures[6], vUv ) * step(5.9, x) * step(x, 6.1);\r\n            col += texture2D(textures[7], vUv ) * step(6.9, x) * step(x, 7.1);\r\n            col += texture2D(textures[8], vUv ) * step(7.9, x) * step(x, 8.1);\r\n            col += texture2D(textures[9], vUv ) * step(8.9, x) * step(x, 9.1);\r\n            col += texture2D(textures[10], vUv ) * step(9.9, x) * step(x, 10.1);\r\n            col += texture2D(textures[11], vUv ) * step(10.9, x) * step(x, 11.1);\r\n            gl_FragColor = col;\r\n            `;\r\n      };\r\n      shader.fragmentShader = shader.fragmentShader\r\n        .replace(\r\n          \"#define STANDARD\",\r\n          `#define STANDARD\r\n                  uniform sampler2D textures[${15}];\r\n                  varying float vTextureIndex;`\r\n        )\r\n        .replace(\"#include <fog_fragment>\", a());\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <group scale={[3, 3, 3]} dispose={null}>\r\n        <group rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\r\n          <instancedMesh ref={ref} args={[null, null, instancingSize]}>\r\n            <planeBufferGeometry args={[6 * 1.33 * 30, 6 * 30]}>\r\n              <instancedBufferAttribute\r\n                attachObject={[\"attributes\", \"textureIndex\"]}\r\n                args={[new Float32Array([...Array(instancingSize).keys()]), 1]}\r\n              />\r\n            </planeBufferGeometry>\r\n            <meshStandardMaterial\r\n              transparent=\"true\"\r\n              map={imageTextures[imageTextures.length - 1]}\r\n              side={THREE.DoubleSide}\r\n            />\r\n          </instancedMesh>\r\n        </group>\r\n      </group>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BannerInstance;\r\n","export default __webpack_public_path__ + \"static/media/Standee.0f9108cc.glb\";","import React, { useRef } from 'react'\nimport { useGLTF, useTexture } from '@react-three/drei'\nimport * as THREE from \"three\"\nimport model from \"../../../../Assets/Stalls/Standee/Standee.glb\"\n\nconst broucherData = {\n  \"type2-center\" : {\n    position : [{x : 15, y : 20, z : -5.1, r : -Math.PI/6}]\n  },\n  \"type3-center\" : {\n    position : [\n      {x : -10, y : 23, z : -5.1, r : Math.PI/6},\n      {x : 30, y : 23, z : -5.1, r : -Math.PI/6}\n    ]\n  },\n  \"type2-corner\" : {\n    position : [{x : -20, y : 15, z : -5.1, r : Math.PI/6}]\n  },\n  \"type3-corner\" : {\n    position : [\n      {x : -18, y : 23, z : -5.1, r : Math.PI/6},\n      {x : 20, y : 23, z : -5.1, r : -Math.PI/6},\n    ]\n  },\n}\n\nlet instancing = 0\nlet matrixIndex = 0\n\nexport default function Model({data}) {\n  \n  const [loaded, setLoaded] = React.useState(false)\n  const group = useRef()\n  const ref1 = useRef()\n  const ref2 = useRef()\n  const ref3 = useRef()\n\n  const images = []\n\n  const typesArray = Object.keys(broucherData)\n  typesArray.map((type, index) => {\n    data[type].banner.map((img, i) => {\n      img.map((im, j) => {\n        if(im.banner_placement_id === \"SL1\" || im.banner_placement_id === \"SL2\"){\n          images.push(im.image_url)\n        }\n      })\n    })\n  })\n\n  const standeeTex = useTexture([...images])\n\n  const refArr = [ref1, ref2, ref3]\n\n  const { nodes, materials } = useGLTF(model)\n\n  const dataArray = Object.values(data)\n  const typeArray = Object.keys(data)\n\n  const dummy = React.useMemo(() => new THREE.Object3D(), [])\n\n  React.useLayoutEffect(() => {\n    \n\n    if(loaded === true){\n      const offsetArray = Object.values(broucherData)\n      const offsetTypeArray = Object.keys(broucherData)\n      let k = 0\n      \n      offsetArray.forEach((offData, index) => {\n        const element = offData.position\n        \n        element.forEach((ele, i) => {\n          const stall = data[offsetTypeArray[index]].pos\n          \n          \n          stall.forEach((posi) => {\n            dummy.position.set((posi[0]+(ele.x* Math.sign(-posi[2])))*34, (posi[2]+(ele.y* Math.sign(-posi[2])))*30, -(posi[1]+ele.z)*30)\n            const r = posi[2] > 0 ? 1 : 0\n            dummy.rotation.set(0, 0, Math.PI*r - ele.r)\n            dummy.updateMatrix()\n\n            refArr.forEach((r) => {\n                r.current.setMatrixAt( matrixIndex, dummy.matrix)\n            })\n            matrixIndex += 1\n          })\n\n        })\n      })\n\n      refArr.forEach((r) => {\n        r.current.instanceMatrix.needsUpdate = true\n      })\n\n\n\n    } else{\n      dataArray.forEach((d, index) => {\n        const noOfStall = d.pos.length\n        if(typeArray[index] === \"type1-center\" || typeArray[index] === \"type1-corner\"){\n          instancing += noOfStall * 0\n        } else if(typeArray[index] === \"type2-center\" || typeArray[index] === \"type2-corner\"){\n          instancing += noOfStall * 1\n        } else {\n          instancing += noOfStall * 2\n        }\n      })\n\n    }\n\n    setLoaded(true)\n\n\n  }, [loaded, data])\n\n  return (\n    <>\n      {loaded === true ? (\n        <group ref={group} scale={[3,3,3]} dispose={null}>\n          <group rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\n            <instancedMesh\n              ref={ref1}\n              args={[nodes.Base_AO.geometry, null, instancing]}\n              material={materials.base_AO} />\n            <instancedMesh\n              ref={ref2}\n              args={[nodes.Mesh.geometry, null, instancing]}\n              material={materials.Standee_Texture_1} />\n            <instancedMesh\n              ref={ref3}\n              args={[nodes.Mesh_1.geometry, null, instancing]}\n              material={materials.Metal_matt} />\n          </group>\n        </group>\n      ) : null}\n    </>\n  )\n}\n\nuseGLTF.preload(model)\n","import React from \"react\";\r\nimport { usePlane } from \"@react-three/cannon\";\r\nimport * as THREE from \"three\";\r\n\r\nlet i = 0\r\n\r\nconst SideBoundary = ({ size }) => {\r\n  const [ref] = usePlane(() => ({ position: [0, 5, -170] }));\r\n  const [ref2] = usePlane(() => ({\r\n    position: [0, 5, 170],\r\n    rotation: [0, Math.PI, 0]\r\n  }));\r\n  const [ref3] = usePlane(() => ({\r\n    position: [size/2 + size/150, 5, 0],\r\n    rotation: [0, -Math.PI / 2, 0]\r\n  }));\r\n  const [ref4] = usePlane(() => ({\r\n    position: [-(size/2+size/80), 5, 0],\r\n    rotation: [0, Math.PI / 2, 0]\r\n  }));\r\n  \r\n  \r\n\r\n  return (\r\n    <>\r\n      <mesh ref={ref}>\r\n        <planeGeometry args={[size + size/15, 10]} />\r\n        <meshBasicMaterial\r\n          color=\"blue\"\r\n          visible={false}\r\n        />\r\n      </mesh>\r\n      <mesh ref={ref2}>\r\n        <planeGeometry args={[size + size/15, 10]} />\r\n        <meshBasicMaterial\r\n          color=\"blue\"\r\n          visible={false}\r\n        />\r\n        \r\n      </mesh>\r\n      <mesh ref={ref3}>\r\n        <planeGeometry args={[380, 10]} />\r\n        <meshBasicMaterial\r\n          color=\"blue\"\r\n          visible={false}\r\n        />\r\n      </mesh>\r\n      <mesh ref={ref4}>\r\n        <planeGeometry args={[380, 10]} />\r\n        <meshBasicMaterial\r\n          color=\"blue\"\r\n          visible={false}\r\n        />\r\n      </mesh>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideBoundary;\r\n","import React, { useState } from \"react\";\r\nimport * as THREE from \"three\";\r\n\r\n//Stalls\r\nimport Type1Center from \"./Type1_center\";\r\nimport Type1Corner from \"./Type1_corner\";\r\nimport Type2Center from \"./Type2_center\";\r\nimport Type2Corner from \"./Type2_corner\";\r\nimport Type3Center from \"./Type3_center\";\r\nimport Type3Corner from \"./Type3_corner\";\r\n\r\n//Walls\r\nimport LeftWall from \"../Walls/LeftWall\";\r\nimport RightWall from \"../Walls/RightWall\";\r\nimport FrontWall from \"../Walls/FrontWall\";\r\nimport Ground from \"../Floor/Ground\";\r\n\r\n//stall assets\r\nimport ReceptionTable from \"./ReceptionTable/ReceptionDraco\";\r\nimport Reception2 from \"./ReceptionTable/Reception2\";\r\nimport Broucher from \"./Broucher/Broucher\";\r\nimport VCTable from \"./VCTable/VCTable\";\r\nimport KTv from \"./KTv/KTv\";\r\nimport Display from \"./Display/Display\";\r\nimport Banners from \"./Logo/Banners\";\r\nimport Standee from \"./Standee/Standee\";\r\nimport SideBoundary from \"../Walls/SideBoundary\";\r\n\r\nconst zDist = 80;\r\n\r\nconst stallSizes = {\r\n  \"type1-center\": 45,\r\n  \"type1-corner\": 45,\r\n  \"type1-corner2\": 45,\r\n  \"type2-center\": 55,\r\n  \"type2-corner\": 55,\r\n  \"type2-corner2\": 55,\r\n  \"type3-center\": 70,\r\n  \"type3-corner\": 70,\r\n  \"type3-corner2\": 70,\r\n  null: 0\r\n};\r\n\r\nconst side = [1, -1];\r\n\r\nconst instancing = (array, value) => {\r\n  let n = 0;\r\n  for (let i = 0; i < array.length; i++) {\r\n    if (array[i] === value) {\r\n      n++;\r\n    }\r\n  }\r\n  return n;\r\n};\r\n\r\nconst add = (arr) => {\r\n  return arr.reduce((a, b) => a + b, 0);\r\n};\r\n\r\nlet typeInsatnce = {};\r\n\r\nconst pos1 = [];\r\nconst pos2 = [];\r\nconst pos3 = [];\r\nconst pos4 = [];\r\nconst pos5 = [];\r\nconst pos6 = [];\r\n\r\nconst color1 = [];\r\nconst color2 = [];\r\nconst color3 = [];\r\nconst color4 = [];\r\nconst color5 = [];\r\nconst color6 = [];\r\n\r\nconst logo1 = [];\r\nconst logo2 = [];\r\nconst logo3 = [];\r\nconst logo4 = [];\r\nconst logo5 = [];\r\nconst logo6 = [];\r\n\r\nconst banner1 = [];\r\nconst banner2 = [];\r\nconst banner3 = [];\r\nconst banner4 = [];\r\nconst banner5 = [];\r\nconst banner6 = [];\r\n\r\nconst stallIndex1 = [];\r\nconst stallIndex2 = [];\r\nconst stallIndex3 = [];\r\nconst stallIndex4 = [];\r\nconst stallIndex5 = [];\r\nconst stallIndex6 = [];\r\n\r\nlet j = 0;\r\nconst stallType = [];\r\nconst stallColor = [];\r\nconst stallLogo = [];\r\nconst stallBanners = [];\r\n\r\nconst StallPlacement = ({ stallData, types }) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [positionData, setPositionData] = useState({});\r\n  const [floorSize, setFloorSize] = useState(0);\r\n\r\n  // console.log(stallData)\r\n\r\n  stallData.map((stall, index) => {\r\n    stallType.push(stall.stall_type);\r\n    if (index === stallData.length - 1) {\r\n      stallColor.push([stall.primary_3dcolor, \"null\"]);\r\n      stallLogo.push([stall.logo_url, \"null\"]);\r\n      stallBanners.push([stall.banner_images, \"null\"]);\r\n    } else if (index % 2 === 0) {\r\n      stallColor.push([\r\n        stall.primary_3dcolor,\r\n        stallData[index + 1].primary_3dcolor\r\n      ]);\r\n      stallLogo.push([stall.logo_url, stallData[index + 1].logo_url]);\r\n      stallBanners.push([\r\n        stall.banner_images,\r\n        stallData[index + 1].banner_images\r\n      ]);\r\n    }\r\n  });\r\n\r\n  Object.keys(stallSizes).map((stallName) => {\r\n    typeInsatnce[stallName] = instancing(stallType, stallName);\r\n  });\r\n\r\n  React.useLayoutEffect(() => {\r\n    const dummy = new THREE.Object3D();\r\n\r\n    let total = 0;\r\n\r\n    types.forEach((type) => {\r\n      const max = Math.max(stallSizes[type[0]], stallSizes[type[1]]);\r\n      total += max;\r\n    });\r\n\r\n    setFloorSize(total);\r\n\r\n    let grid = [];\r\n    types.map((type, index) => {\r\n      const max = Math.max(stallSizes[type[0]], stallSizes[type[1]]);\r\n      grid.push(max);\r\n\r\n      type.map((stall, i) => {\r\n        if (stall === \"type1-center\") {\r\n          const t = [...grid];\r\n          const center = add(t.splice(0, index)) + grid[index] / 2 - total / 2;\r\n          dummy.position.set(center, 5, zDist * side[i]);\r\n          pos1.push([dummy.position.x, dummy.position.y, dummy.position.z]);\r\n          color1.push(stallColor[index][i]);\r\n          logo1.push(stallLogo[index][i]);\r\n          banner1.push(stallBanners[index][i]);\r\n          stallIndex1.push(j);\r\n          j += 1;\r\n        } else if (stall === \"type1-corner\" || stall === \"type1-corner2\") {\r\n          const t = [...grid];\r\n          const center = add(t.splice(0, index)) + grid[index] / 2 - total / 2;\r\n          dummy.position.set(center, 5, zDist * side[i]);\r\n          pos2.push([dummy.position.x, dummy.position.y, dummy.position.z]);\r\n          color2.push(stallColor[index][i]);\r\n          logo2.push(stallLogo[index][i]);\r\n          banner2.push(stallBanners[index][i]);\r\n          stallIndex2.push(j);\r\n          j += 1;\r\n        } else if (stall === \"type2-center\") {\r\n          const t = [...grid];\r\n          const center = add(t.splice(0, index)) + grid[index] / 2 - total / 2;\r\n          dummy.position.set(center, 5, zDist * side[i]);\r\n          pos3.push([dummy.position.x, dummy.position.y, dummy.position.z]);\r\n          color3.push(stallColor[index][i]);\r\n          logo3.push(stallLogo[index][i]);\r\n          banner3.push(stallBanners[index][i]);\r\n          stallIndex3.push(j);\r\n          j += 1;\r\n        } else if (stall === \"type2-corner\" || stall === \"type2-corner2\") {\r\n          const t = [...grid];\r\n          const center = add(t.splice(0, index)) + grid[index] / 2 - total / 2;\r\n          dummy.position.set(center, 5, zDist * side[i]);\r\n          pos4.push([dummy.position.x, dummy.position.y, dummy.position.z]);\r\n          color4.push(stallColor[index][i]);\r\n          logo4.push(stallLogo[index][i]);\r\n          banner4.push(stallBanners[index][i]);\r\n          stallIndex4.push(j);\r\n          j += 1;\r\n        } else if (stall === \"type3-center\") {\r\n          const t = [...grid];\r\n          const center = add(t.splice(0, index)) + grid[index] / 2 - total / 2;\r\n          dummy.position.set(center, 5, zDist * side[i]);\r\n          pos5.push([dummy.position.x, dummy.position.y, dummy.position.z]);\r\n          color5.push(stallColor[index][i]);\r\n          logo5.push(stallLogo[index][i]);\r\n          banner5.push(stallBanners[index][i]);\r\n          stallIndex5.push(j);\r\n          j += 1;\r\n        } else if (stall === \"type3-corner\" || stall === \"type3-corner2\") {\r\n          const t = [...grid];\r\n          const center = add(t.splice(0, index)) + grid[index] / 2 - total / 2;\r\n          dummy.position.set(center, 5, zDist * side[i]);\r\n          pos6.push([dummy.position.x, dummy.position.y, dummy.position.z]);\r\n          color6.push(stallColor[index][i]);\r\n          logo6.push(stallLogo[index][i]);\r\n          banner6.push(stallBanners[index][i]);\r\n          stallIndex6.push(j);\r\n          j += 1;\r\n        }\r\n      });\r\n    });\r\n    setPositionData({\r\n      \"type1-center\": {\r\n        pos: pos1,\r\n        color: color1,\r\n        index: stallIndex1,\r\n        logo: logo1,\r\n        banner: banner1\r\n      },\r\n      \"type1-corner\": {\r\n        pos: pos2,\r\n        color: color2,\r\n        index: stallIndex2,\r\n        logo: logo2,\r\n        banner: banner2\r\n      },\r\n      \"type2-center\": {\r\n        pos: pos3,\r\n        color: color3,\r\n        index: stallIndex3,\r\n        logo: logo3,\r\n        banner: banner3\r\n      },\r\n      \"type2-corner\": {\r\n        pos: pos4,\r\n        color: color4,\r\n        index: stallIndex4,\r\n        logo: logo4,\r\n        banner: banner4\r\n      },\r\n      \"type3-center\": {\r\n        pos: pos5,\r\n        color: color5,\r\n        index: stallIndex5,\r\n        logo: logo5,\r\n        banner: banner5\r\n      },\r\n      \"type3-corner\": {\r\n        pos: pos6,\r\n        color: color6,\r\n        index: stallIndex6,\r\n        logo: logo6,\r\n        banner: banner6\r\n      }\r\n    });\r\n  }, [types]);\r\n\r\n  React.useEffect(() => {\r\n    setLoaded(true);\r\n  }, [positionData]);\r\n\r\n  return (\r\n    <>\r\n      {loaded === true ? (\r\n        <>\r\n          {positionData[\"type1-center\"].pos.length > 0 ? (\r\n            <Type1Center\r\n              positionData={positionData[\"type1-center\"].pos}\r\n              color={positionData[\"type1-center\"].color}\r\n            />\r\n          ) : null}\r\n\r\n          {positionData[\"type1-corner\"].pos.length > 0 ? (\r\n            <Type1Corner\r\n              positionData={positionData[\"type1-corner\"].pos}\r\n              color={positionData[\"type1-corner\"].color}\r\n            />\r\n          ) : null}\r\n\r\n          {positionData[\"type2-center\"].pos.length > 0 ? (\r\n            <Type2Center\r\n              positionData={positionData[\"type2-center\"].pos}\r\n              color={positionData[\"type2-center\"].color}\r\n            />\r\n          ) : null}\r\n\r\n          {positionData[\"type2-corner\"].pos.length > 0 ? (\r\n            <Type2Corner\r\n              positionData={positionData[\"type2-corner\"].pos}\r\n              color={positionData[\"type2-corner\"].color}\r\n            />\r\n          ) : null}\r\n\r\n          {positionData[\"type3-center\"].pos.length > 0 ? (\r\n            <Type3Center\r\n              positionData={positionData[\"type3-center\"].pos}\r\n              color={positionData[\"type3-center\"].color}\r\n            />\r\n          ) : null}\r\n\r\n          {positionData[\"type3-corner\"].pos.length > 0 ? (\r\n            <Type3Corner\r\n              positionData={positionData[\"type3-corner\"].pos}\r\n              color={positionData[\"type3-corner\"].color}\r\n            />\r\n          ) : null}\r\n\r\n          <Ground size={floorSize} />\r\n          <LeftWall size={floorSize} position={[0, 0, -135]} />\r\n          <FrontWall size={floorSize} />\r\n          <RightWall size={floorSize} position={[0, 0, 135]} />\r\n          <SideBoundary size={floorSize} />\r\n          {/* {positionData !== {} ? (\r\n                    <ReceptionTable data={positionData} instanceSize = {stallData.length}/>\r\n                ) : (null) }\r\n\r\n                {positionData !== {} ? (\r\n                    <Reception2 data={positionData} instanceSize = {stallData.length}/>\r\n                ) : (null) }\r\n\r\n                {positionData !== {} ? (\r\n                    <Broucher data={positionData} instanceSize = {stallData.length}/>\r\n                ) : (null) }\r\n\r\n                {positionData !== {} ? (\r\n                    <Standee data={positionData}/>\r\n                ) : (null) }\r\n\r\n                {positionData !== {} ? (\r\n                    <VCTable data={positionData}/>\r\n                ) : (null) }\r\n\r\n                {positionData !== {} ? (\r\n                    <KTv data={positionData}/>\r\n                ) : (null) }\r\n\r\n                {positionData !== {} ? (\r\n                    <Display data={positionData}/>\r\n                ) : (null) }\r\n\r\n\r\n                {positionData !== {} ? (\r\n                    <Banners data={positionData}/>\r\n                ) : (null) } */}\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StallPlacement;\r\n","import \"./styles.css\";\n\nimport { useEffect, useState, Suspense } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls, Stats } from \"@react-three/drei\";\nimport { Physics } from \"@react-three/cannon\";\n\n//Components\nimport HtmlOverlay from \"./Components/HtmlOverlay/HtmlOverlay\";\nimport Firstpersonprespective from \"./Components/Player/Firstpersonprespective\";\nimport Lights from \"./Components/Lights/Lights\";\nimport StallPlacement from \"./Components/Hall/Stalls/StallPlacement\";\nimport { Loader } from \"./Components/Loader/Loader\";\n\nfunction App() {\n  const [stallData, setStallData] = useState([]);\n  const [types, setTypes] = useState([]);\n\n  const getStallData = async () => {\n    const response = await fetch(\n      \"https://boring-goldberg-0ae08e.netlify.app/Json_VishramTest.json\"\n    );\n    const data = await response.json();\n    setStallData(data.data.stall);\n  };\n\n  useEffect(() => {\n    getStallData();\n  }, []);\n\n  useEffect(() => {\n    const rows = [];\n    stallData.forEach((stall, index) => {\n      if (stallData.length % 2 === 0) {\n        if (index % 2 === 0) {\n          const coloumn = [stall.stall_type, stallData[index + 1].stall_type];\n          rows.push(coloumn);\n        }\n      } else {\n        if (index === stallData.length - 1) {\n          if (index % 2 === 0) {\n            const coloumn = [stall.stall_type, \"null\"];\n            rows.push(coloumn);\n          }\n        } else {\n          if (index % 2 === 0) {\n            const coloumn = [stall.stall_type, stallData[index + 1].stall_type];\n            rows.push(coloumn);\n          }\n        }\n      }\n    });\n    setTypes(rows);\n  }, [stallData]);\n\n  useEffect(() => {}, [types]);\n\n  return (\n    <>\n      {types.length > 0 ? (\n        <>\n          <Canvas\n            shadows\n            gl={{ alpha: false, antialias: true }}\n            camera={{\n              fov: 45,\n              position: [-400, 20, -50],\n              near: 0.1,\n              far: 2000\n            }}\n            onCreated={({ gl }) => {\n              gl.physicallyCorrectLights = true;\n              gl.outputEncoding = true;\n            }}\n            dpr={Math.min(2, window.devicePixelRatio)}\n          >\n            <Lights />\n            {/* <axesHelper position = {[0, 30, 0]} scale = {[30,30,30]}/> */}\n\n            <Physics gravity={[0, 10, 0]}>\n              <Suspense fallback={null}>\n                <StallPlacement stallData={stallData} types={types} />\n              </Suspense>\n              <Firstpersonprespective />\n            </Physics>\n\n            <OrbitControls />\n          </Canvas>\n          <HtmlOverlay />\n          <Stats />\n        </>\n      ) : (\n        <h1>Loading</h1>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}